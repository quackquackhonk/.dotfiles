# If you come from bash you might have to change your $PATH.
umask 002

export PATH=$HOME/bin:/usr/local/bin:$PATH
export PATH=$HOME/.local/bin:$PATH
export PATH=$HOME/.cargo/bin:$PATH
export PATH=$HOME/.sources/sml/bin:$PATH
export PATH=$HOME/.sources/smlnj/bin:$PATH
export PATH=$HOME/.sources/v:$PATH
export PATH=/opt/homebrew/bin:$PATH
export PATH=/Library/PostgreSQL/16/bin:$PATH
export PATH=$HOME/opt/grpc/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"
export LIBGL_ALWAYS_SOFTWARE=true

export DOCKER_DEFAULT_PLATFORM=linux/amd64
export HOMEBREW_NO_AUTO_UPDATE=1

export CMAKE_COLOR_DIAGNOSTICS=ON
export CMAKE_EXPORT_COMPILE_COMMANDS=1

unsetopt PROMPT_SP

plugins=(git ssh-agent)

source $ZSH/oh-my-zsh.sh

export EDITOR="nvim"

# User configuration

# aliases
alias zshconf="$EDITOR ~/.zshrc && source ~/.zshrc"
alias zshsrc="source ~/.zshrc"
alias ohmyzsh="$EDITOR ~/.oh-my-zsh"
alias nvconf="$EDITOR ~/.config/nvim/init.lua"

alias gs='git status'
alias gc='git commit'
alias ga='git add'
alias gp='git pull'
alias gP='git push'

alias vwsnotes='cd ~/Dropbox/VWS && nv .'

alias fish_reload='source $HOME/.config/fish/config.fish'
alias nv='nvim'
alias vi='nvim'

alias ls='exa'
alias l='exa -lah'
alias b='bat'
alias cd='z'

alias t='tmux'

alias d='docker'
alias dc='docker compose'

alias em='emacsclient -nw'
alias emd='emacs --daemon'
alias emde='emacs --daemon && emacsclient -nw'
alias emdkill='emacsclient -e "(kill-emacs)"'
alias emdr='emacsclient -e "(kill-emacs)" && emacs --daemon'
alias emconf='emacsclient -nw ~/.emacs.d/config.org'
alias emreload='emacsclient -e "(load-file user-init-file)"'

alias cgt='cargo nextest run'
alias cgr='cargo run'
alias cgb='cargo build'

# work
alias cirrus='ssh -i ~/.ssh/stankala_id.key stankala@cirrus.veriskweather.net -t "zsh"'
function cirruscp() {
    scp -i ~/.ssh/stankala_id.key $1 stankala@cirrus.veriskweather.net:/storage/stankala
}
alias awsnonprod='saml2aws login -a nonprod && eval $(saml2aws script -a nonprod)'
function spackon() {
    spack env activate -d spack_env/
}
function spackoff() {
    unset SPACK_INSTALL_PREFIX
    unset USER_INCLUDE 
    unset USER_LIBDIR
    spack env deactivate
}
function spackcert() {
    export CERT_PATH=$(python -c 'import site; print(site.getsitepackages()[0] + "/certifi/cacert.pem")')
    cat ~/cert/ZscalerRootCertificate-2048-SHA256.crt >> $CERT_PATH
}
alias lzd='lazydocker'

export TERM=xterm-256color

export BAT_THEME="gruvbox-dark"

# ssh agent
# eval "$(ssh-agent -s)"
# eval "$(ssh-add ~/.ssh/id_ed25519)"

# opam configuration
[[ ! -r /home/sahana/.opam/opam-init/init.zsh ]] || source /home/sahana/.opam/opam-init/init.zsh  > /dev/null 2> /dev/null

#[ -f "/home/sahana/.ghcup/env" ] && source "/home/sahana/.ghcup/env" # ghcup-env
[ -f "/home/sahana/.ghcup/env" ] && source "/home/sahana/.ghcup/env" # ghcup-env


# completion
autoload bashcompinit && bashcompinit
autoload -Uz compinit && compinit
autoload -U zmv

complete -C '/usr/local/bin/aws_completer' aws

eval "$(zoxide init zsh)"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/homebrew/Caskroom/miniconda/base/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/homebrew/Caskroom/miniconda/base/etc/profile.d/conda.sh" ]; then
        . "/opt/homebrew/Caskroom/miniconda/base/etc/profile.d/conda.sh"
    else
        export PATH="/opt/homebrew/Caskroom/miniconda/base/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

. /Users/i34866/opt/git/spack/share/spack/setup-env.sh *

eval "$(starship init zsh)"
