#+TITLE:

* Configuration files

** Justfile
#+begin_src just :tangle justfile
  # This is an example justfile
  build:
      echo "BUILD NOT CONFIGURED"

  test:
      echo "TEST NOT CONFIGURED"
#+end_src

** Project Setup

#+begin_src emacs-lisp :tangle .dir-locals.el
  ((nil . ((compile-command . "just build")
           ;; Put more config values here
           (eval . (progn
                     (pyvenv-activate (projectile-expand-root "spack_env/.spack-env/view"))))
           )))
#+end_src

** Project Direnv

#+begin_src envrc-file :tangle .envrc
  use flake
#+end_src

#+begin_src nix :tangle flake.nix
  {
    description = "A basic flake with a shell";
    inputs.nixpkgs.url = "github:NixOS/nixpkgs/nixpkgs-unstable";
    inputs.systems.url = "github:nix-systems/default";
    inputs.flake-utils = {
      url = "github:numtide/flake-utils";
      inputs.systems.follows = "systems";
    };

    outputs =
      { nixpkgs, flake-utils, ... }:
      flake-utils.lib.eachDefaultSystem (
        system:
        let
          pkgs = nixpkgs.legacyPackages.${system};
        in
          {
            devShells.default = pkgs.mkShell {
              packages = [
                # Add more packages here
                pkgs.zsh
              ];
            };
          }
      );
  }
#+end_src

* Links
* Tasks
* Questions
