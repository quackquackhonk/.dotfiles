(undo-tree-save-format-version . 1)
"01cd0a6ab2107d8412ac6a3946f78034521eb68f"
[nil nil nil nil (26384 6811 37048 0) 0 nil]
([nil nil ((192 . 192) (192 . 199) (189 . 192) (t 26383 56185 304776 760000)) nil (26384 6811 37048 0) 0 nil])
([nil nil ((211 . 221) (#("w" 0 1 (face font-lock-constant-face fontified t)) . -211) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("h" 0 1 (face font-lock-constant-face fontified t)) . -212) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("i" 0 1 (face font-lock-constant-face fontified t)) . -213) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("c" 0 1 (face font-lock-constant-face fontified t)) . -214) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("h" 0 1 (face font-lock-constant-face fontified t)) . -215) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 216 (212 . 212) (212 . 216) (#("i" 0 1 (face font-lock-constant-face fontified t)) . -212) (undo-tree-id10 . -1) 213 (211 . 213) (#("'" 0 1 (fontified t)) . -211) (undo-tree-id11 . -1) 212 (203 . 212) (202 . 204) (199 . 202)) nil (26384 6811 37047 0) 0 nil])
([nil nil ((245 . 250) (241 . 245) (234 . 234) (234 . 241) (230 . 234) (226 . 226) (226 . 230) (225 . 227) (222 . 225)) nil (26384 6817 569113 0) 0 nil])
([nil nil ((271 . 276) (261 . 261) (261 . 271) (256 . 256) (256 . 261) (255 . 257) (253 . 255) (#("  " 0 2 (fontified nil)) . 252) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (251 . 255) (t 26384 6811 40523 633000)) nil (26384 6841 651302 0) 0 nil] [nil nil ((256 . 264) (255 . 257) (253 . 255) (#("  " 0 2 (fontified nil)) . 252) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (251 . 255) (t 26384 6811 40523 633000)) ((#("
  
" 0 1 (fontified t) 1 3 (fontified nil) 3 4 (fontified nil)) . 251) (undo-tree-id15 . -4) (undo-tree-id16 . -4) (undo-tree-id17 . -3) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (252 . 254) (#("  " 0 2 (fontified nil)) . 253) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (#("()" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 255) (undo-tree-id25 . -1) (undo-tree-id26 . 1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("require " 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 256) (undo-tree-id30 . -7) (undo-tree-id31 . -7) (undo-tree-id32 . -7) (undo-tree-id33 . -7)) (26384 6817 568422 0) 0 nil])
([nil nil ((270 . 286) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -270) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 271 (255 . 271) (253 . 255) (#("  " 0 2 (fontified nil)) . 252) (252 . 254) (252 . 253)) nil (26384 6841 651300 0) 0 nil])
nil
([nil nil ((258 . 266) (#("disable" 0 7 (face font-lock-comment-face fontified t)) . 258) (undo-tree-id34 . -6) (undo-tree-id35 . -7) (undo-tree-id36 . -7)) nil (26384 6841 651358 0) 0 nil])
([nil nil ((271 . 271) (271 . 273) (255 . 271) (254 . 256) (251 . 254) 247) nil (26384 6852 174562 0) 0 nil] [nil nil ((320 . 324) (316 . 316) (316 . 320) (315 . 317) (312 . 315)) ((#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 312) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -3) (undo-tree-id46 . -3) (undo-tree-id47 . -1) (undo-tree-id48 . -3) (#("()" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 315) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . 1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("dimi" 0 4 (fontified nil)) . 316) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) (undo-tree-id58 . -4) (undo-tree-id59 . -4) (#("nish" 0 4 (fontified t)) . 320) (undo-tree-id60 . -3) (undo-tree-id61 . -4) (undo-tree-id62 . -3) (undo-tree-id63 . -3) (undo-tree-id64 . -3)) (26384 6841 651289 0) 0 nil])
([nil nil ((298 . 298) (298 . 302) (282 . 298) (278 . 278) (278 . 282) (277 . 279) (274 . 277) 272) nil (26384 6852 174559 0) 0 nil])
nil
([nil nil ((218 . 224) (208 . 208) (208 . 218) (204 . 204) (204 . 208) (197 . 205) (#("i" 0 1 (fontified t)) . -197) (undo-tree-id0 . -1) (#("i" 0 1 (fontified t)) . -198) (undo-tree-id1 . -1) (#("t" 0 1 (fontified t)) . -199) (undo-tree-id2 . -1) (#(" " 0 1 (fontified t)) . -200) (undo-tree-id3 . -1) 201 (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -201) (undo-tree-id4 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 202) (197 . 203) (194 . 197) (189 . 189) (189 . 194) (169 . 189) (168 . 170) (167 . 168) (166 . 167) (t 26384 6852 178337 374000) 147) nil (26384 12898 768244 0) 0 nil])
([nil nil ((195 . 195) (195 . 202) (192 . 195) (191 . 191) (191 . 192) (185 . 185) (185 . 191) (180 . 180) (180 . 185) (#("s" 0 1 (fontified t)) . -180) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (#(" " 0 1 (fontified t)) . -181) (undo-tree-id132 . -1) 182 (173 . 182) (169 . 169) (169 . 173) (168 . 170) (168 . 169) (167 . 168) (t 26384 12898 772499 418000) 167) nil (26384 12966 480558 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 884 . 885) (nil fontified nil 204 . 885) (204 . 885) (203 . 204) 201) nil (26384 12966 480556 0) 0 nil])
([nil nil ((#("(use-package doom-themes
  :config)
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 24 (face font-lock-constant-face fontified t) 24 25 (fontified t) 25 27 (fontified t) 27 34 (face font-lock-builtin-face fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 36 (fontified t)) . 168) (undo-tree-id5 . -35) (undo-tree-id6 . -23) (undo-tree-id7 . -35) (undo-tree-id8 . -35) (undo-tree-id9 . -5) (undo-tree-id10 . -34) (undo-tree-id11 . -34) (undo-tree-id12 . -33) (undo-tree-id13 . -33) (undo-tree-id14 . -33) (undo-tree-id15 . -33) (undo-tree-id16 . -33) (undo-tree-id17 . -33) (undo-tree-id18 . -33) (undo-tree-id19 . -33) (undo-tree-id20 . -33) (undo-tree-id21 . -33) (undo-tree-id22 . -33) (undo-tree-id23 . -33) (undo-tree-id24 . -33) (undo-tree-id25 . -33) (undo-tree-id26 . -33) (undo-tree-id27 . -33) (undo-tree-id28 . -33) (undo-tree-id29 . -33) (undo-tree-id30 . -33) (undo-tree-id31 . -33) (undo-tree-id32 . -33) (undo-tree-id33 . -33) (undo-tree-id34 . -33) (undo-tree-id35 . -33) (undo-tree-id36 . -33) (undo-tree-id37 . -33) (undo-tree-id38 . -33) (undo-tree-id39 . -33) (undo-tree-id40 . -33) (undo-tree-id41 . -33) (undo-tree-id42 . -33) (undo-tree-id43 . -33) (undo-tree-id44 . -33) (undo-tree-id45 . -33) (undo-tree-id46 . -33) (undo-tree-id47 . -33) (undo-tree-id48 . -33) (undo-tree-id49 . -33) (undo-tree-id50 . -33) (undo-tree-id51 . -33) (undo-tree-id52 . -33) (undo-tree-id53 . -33) (undo-tree-id54 . -33) (undo-tree-id55 . -33) (undo-tree-id56 . -33) (undo-tree-id57 . -33) (undo-tree-id58 . -33) (undo-tree-id59 . -33) (undo-tree-id60 . -33) (undo-tree-id61 . -33) (undo-tree-id62 . -33) (undo-tree-id63 . -33) (undo-tree-id64 . -33) (undo-tree-id65 . -33) (undo-tree-id66 . -33) (undo-tree-id67 . -33) (undo-tree-id68 . -33) (undo-tree-id69 . -33) (undo-tree-id70 . -33) (undo-tree-id71 . -33) (undo-tree-id72 . -33) (undo-tree-id73 . -33) (undo-tree-id74 . -33) (undo-tree-id75 . -33) (undo-tree-id76 . -33) (undo-tree-id77 . -33) (undo-tree-id78 . -33) (undo-tree-id79 . -33) (undo-tree-id80 . -33) (undo-tree-id81 . -33) (undo-tree-id82 . -33) (undo-tree-id83 . -36) (undo-tree-id84 . -36) (undo-tree-id85 . -36) (undo-tree-id86 . -36) (undo-tree-id87 . -36) (undo-tree-id88 . -36) (undo-tree-id89 . -36) (undo-tree-id90 . -36) (undo-tree-id91 . -23) (undo-tree-id92 . -23) (undo-tree-id93 . -23) (undo-tree-id94 . -23) (undo-tree-id95 . -23) (undo-tree-id96 . -23) (undo-tree-id97 . -23) (undo-tree-id98 . -23) (undo-tree-id99 . -23) (undo-tree-id100 . -23) (undo-tree-id101 . -23) (undo-tree-id102 . -23) (undo-tree-id103 . -23) (undo-tree-id104 . -23) (undo-tree-id105 . -23) (undo-tree-id106 . -23) (undo-tree-id107 . -23) (undo-tree-id108 . -23) (undo-tree-id109 . -23) (undo-tree-id110 . -23) (undo-tree-id111 . -23) (undo-tree-id112 . -23) (undo-tree-id113 . -23) (undo-tree-id114 . -25) (undo-tree-id115 . -35) (undo-tree-id116 . -35) (undo-tree-id117 . -35) (undo-tree-id118 . -35) (undo-tree-id119 . -35) (undo-tree-id120 . -35) (undo-tree-id121 . -35) (undo-tree-id122 . -35) (undo-tree-id123 . -35) (undo-tree-id124 . -33) (undo-tree-id125 . -35) (undo-tree-id126 . -35) (undo-tree-id127 . -35) (undo-tree-id128 . -35) (undo-tree-id129 . -36) 203) nil (26384 12966 480553 0) 0 nil])
([nil nil ((#("  :ensure t
" 0 2 (fontified t) 2 9 (face font-lock-builtin-face fontified t) 9 12 (fontified t)) . 193) (undo-tree-id154 . -11) (undo-tree-id155 . -10) (undo-tree-id156 . -10) (undo-tree-id157 . -10) (undo-tree-id158 . -10) (undo-tree-id159 . -10) (undo-tree-id160 . -10) (undo-tree-id161 . -10) (undo-tree-id162 . -10) (undo-tree-id163 . -10) (undo-tree-id164 . -10) (undo-tree-id165 . -10) (undo-tree-id166 . -10) (undo-tree-id167 . -10) (undo-tree-id168 . -10) (undo-tree-id169 . -10) (undo-tree-id170 . -10) (undo-tree-id171 . -10) (undo-tree-id172 . -10) (undo-tree-id173 . -10) (undo-tree-id174 . -10) (undo-tree-id175 . -10) (undo-tree-id176 . -10) (undo-tree-id177 . -10) (undo-tree-id178 . -10) (undo-tree-id179 . -12) 203 (t 26384 12966 484073 142000)) nil (26384 12969 873503 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -390) (undo-tree-id133 . -2) (undo-tree-id134 . -2) (undo-tree-id135 . -2) (undo-tree-id136 . -2) (undo-tree-id137 . -2) (undo-tree-id138 . -2) (undo-tree-id139 . -2) (undo-tree-id140 . -2) (undo-tree-id141 . -2) (undo-tree-id142 . -2) (undo-tree-id143 . -2) (undo-tree-id144 . -2) (undo-tree-id145 . -2) (undo-tree-id146 . -2) (undo-tree-id147 . -2) (undo-tree-id148 . -2) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (undo-tree-id153 . -2) 392 (389 . 392) 319) nil (26384 12969 873494 0) 0 nil])
([nil nil ((#("(catppuccin-reload)
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 18 (fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t) 19 20 (fontified t)) . 147) (undo-tree-id180 . -7) (undo-tree-id181 . -7) (undo-tree-id182 . -7) (undo-tree-id183 . -19) (undo-tree-id184 . -7) 154 (t 26384 12969 877952 19000)) nil (26384 13004 315999 0) 0 nil])
([nil nil ((116 . 116) (116 . 121) (113 . 116)) nil (26384 13014 299886 0) 0 nil] [nil nil ((116 . 123) (113 . 116)) ((#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 113) (undo-tree-id185 . -3) (undo-tree-id186 . -3) (undo-tree-id187 . -1) (undo-tree-id188 . -3) (undo-tree-id189 . -3) (undo-tree-id190 . -3) (#(":config" 0 7 (face font-lock-builtin-face fontified t)) . 116) (undo-tree-id191 . -6) (undo-tree-id192 . -7) (undo-tree-id193 . -6) (undo-tree-id194 . -6) (undo-tree-id195 . -6)) (26384 13004 315931 0) 0 nil])
([nil nil ((#("(setq catppuccin-flavor 'mocha)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t)) . 123) (undo-tree-id214 . -30) (undo-tree-id215 . -6) 129) nil (26384 13014 299885 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 151 . 152) (nil fontified nil 121 . 152) (121 . 152) 120) nil (26384 13014 299884 0) 0 nil])
([nil nil ((122 . 124) (#(" " 0 1 (fontified nil)) . 121) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (122 . 123) (121 . 122)) nil (26384 13014 299882 0) 0 nil])
([nil nil ((#("(use-package doom-themes
  :config
  ;; Global settings (defaults)
  (setq doom-themes-enable-bold t    ; if nil, bold is universally disabled
        doom-themes-enable-italic t) ; if nil, italics is universally disabled

  (load-theme 'doom-one t)

  ;; Enable flashing mode-line on errors
  (doom-themes-visual-bell-config)
  ;; Enable custom neotree theme (all-the-icons must be installed!)
  (doom-themes-neotree-config)
  ;; or for treemacs users
  (setq doom-themes-treemacs-theme \"doom-atom\") ; use \"doom-colors\" for less minimal icon theme
  (doom-themes-treemacs-config)
  ;; Corrects (and improves) org-mode's native fontification.
  (doom-themes-org-config))
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 24 (face font-lock-constant-face fontified t) 24 27 (fontified t) 27 34 (face font-lock-builtin-face fontified t) 34 37 (fontified t) 37 40 (face font-lock-comment-delimiter-face fontified t) 40 67 (face font-lock-comment-face fontified t) 67 69 (fontified t) 69 70 (face (rainbow-delimiters-depth-2-face) fontified t) 70 74 (face font-lock-keyword-face fontified t) 74 104 (fontified t) 104 106 (face font-lock-comment-delimiter-face fontified t) 106 143 (face font-lock-comment-face fontified t) 143 178 (fontified t) 178 179 (face (rainbow-delimiters-depth-2-face) fontified t) 179 180 (fontified t) 180 182 (face font-lock-comment-delimiter-face fontified t) 182 222 (face font-lock-comment-face fontified t) 222 225 (fontified t) 225 226 (face (rainbow-delimiters-depth-2-face) fontified t) 226 248 (fontified t) 248 249 (face (rainbow-delimiters-depth-2-face) fontified t) 249 253 (fontified t) 253 256 (face font-lock-comment-delimiter-face fontified t) 256 292 (face font-lock-comment-face fontified t) 292 294 (fontified t) 294 295 (face (rainbow-delimiters-depth-2-face) fontified t) 295 325 (fontified t) 325 326 (face (rainbow-delimiters-depth-2-face) fontified t) 326 329 (fontified t) 329 332 (face font-lock-comment-delimiter-face fontified t) 332 395 (face font-lock-comment-face fontified t) 395 397 (fontified t) 397 398 (face (rainbow-delimiters-depth-2-face) fontified t) 398 424 (fontified t) 424 425 (face (rainbow-delimiters-depth-2-face) fontified t) 425 428 (fontified t) 428 431 (face font-lock-comment-delimiter-face fontified t) 431 453 (face font-lock-comment-face fontified t) 453 455 (fontified t) 455 456 (face (rainbow-delimiters-depth-2-face) fontified t) 456 460 (face font-lock-keyword-face fontified t) 460 488 (fontified t) 488 499 (face font-lock-string-face fontified t) 499 500 (face (rainbow-delimiters-depth-2-face) fontified t) 500 501 (fontified t) 501 503 (face font-lock-comment-delimiter-face fontified t) 503 549 (face font-lock-comment-face fontified t) 549 551 (fontified t) 551 552 (face (rainbow-delimiters-depth-2-face) fontified t) 552 579 (fontified t) 579 580 (face (rainbow-delimiters-depth-2-face) fontified t) 580 583 (fontified t) 583 586 (face font-lock-comment-delimiter-face fontified t) 586 643 (face font-lock-comment-face fontified t) 643 645 (fontified t) 645 646 (face (rainbow-delimiters-depth-2-face) fontified t) 646 668 (fontified t) 668 669 (face (rainbow-delimiters-depth-2-face) fontified t) 669 670 (face (rainbow-delimiters-depth-1-face) fontified t) 670 671 (fontified t)) . 159) (undo-tree-id2 . -669) (undo-tree-id3 . -13) (undo-tree-id4 . -669) (undo-tree-id5 . -669) (undo-tree-id6 . -670) 828 (t 26384 13014 303891 471000)) nil (26384 14069 885698 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 159) (undo-tree-id0 . 1) (undo-tree-id1 . -1)) nil (26384 14069 885694 0) 0 nil])
([nil nil ((175 . 175) (175 . 181) (162 . 162) (162 . 175) (159 . 162) (158 . 160) (157 . 158) (t 26384 14069 890368 303000) 157) nil (26384 14077 187121 0) 0 nil])
([nil nil ((205 . 216) (197 . 205) (193 . 193) (193 . 197) (191 . 194) (184 . 184) (184 . 191) (181 . 184) (t 26384 14077 191649 24000)) nil (26384 14154 807787 0) 0 nil])
([nil nil ((219 . 229) (#("t" 0 1 (face font-lock-builtin-face fontified t)) . -219) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 220 (216 . 216) (216 . 220)) nil (26384 14154 807785 0) 0 nil])
([nil nil ((184 . 195) (181 . 184) (t 26384 14154 811642 675000) 158) nil (26384 14477 130813 0) 0 nil])
([nil nil ((206 . 208) (#(" " 0 1 (fontified nil)) . 205) (undo-tree-id126 . -1) (206 . 207) (t 26384 14452 979154 232000)) nil (26384 14501 393325 0) 0 nil] [nil nil ((202 . 203) (199 . 199) (199 . 202) (198 . 200) (195 . 198) (t 26384 14452 979154 232000) 194) ((#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 195) (undo-tree-id0 . -3) (undo-tree-id1 . -3) (undo-tree-id2 . -3) (undo-tree-id3 . -3) (undo-tree-id4 . -1) (undo-tree-id5 . -3) (undo-tree-id6 . -3) (undo-tree-id7 . -3) (undo-tree-id8 . -3) (#("()" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 198) (undo-tree-id9 . -1) (undo-tree-id10 . 1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("add" 0 3 (fontified nil)) . 199) (undo-tree-id18 . -3) (undo-tree-id19 . -3) (undo-tree-id20 . -3) (undo-tree-id21 . -3) (undo-tree-id22 . -3) (undo-tree-id23 . -3) (undo-tree-id24 . -3) (undo-tree-id25 . -3) (#("-" 0 1 (fontified t)) . 202) (undo-tree-id26 . -1) (undo-tree-id27 . -1)) (26384 14477 128307 0) 0 nil])
([nil nil ((281 . 282) (264 . 281) (263 . 265) (#("\"" 0 1 (fontified nil)) . -263) (262 . 264) (252 . 262) (251 . 252) (250 . 250) (250 . 251) (246 . 246) (246 . 250) (244 . 247) (240 . 244) (239 . 240) (229 . 239) (213 . 229) (209 . 209) (209 . 213) (208 . 210) (#("a" 0 1 (fontified t)) . -208) (undo-tree-id125 . -1) 209 (208 . 209) (205 . 208) 197) nil (26384 14501 393324 0) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . -311) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 312 (#(":no-confirm" 0 11 (face font-lock-builtin-face fontified t)) . 312) (undo-tree-id86 . -10) (undo-tree-id87 . -4) (undo-tree-id88 . -4) (undo-tree-id89 . -4) (undo-tree-id90 . -4) (undo-tree-id91 . -4) (undo-tree-id92 . -4) (undo-tree-id93 . -4) (undo-tree-id94 . -4) (undo-tree-id95 . -4) (undo-tree-id96 . -4) (undo-tree-id97 . -4) (undo-tree-id98 . -3) (undo-tree-id99 . -3) (undo-tree-id100 . -3) (undo-tree-id101 . -3) (undo-tree-id102 . -3) (undo-tree-id103 . -3) (undo-tree-id104 . -3) (undo-tree-id105 . -3) (undo-tree-id106 . -3) (undo-tree-id107 . -3) (undo-tree-id108 . -3) (undo-tree-id109 . -3) (undo-tree-id110 . -3) (undo-tree-id111 . -3) (undo-tree-id112 . -3) (undo-tree-id113 . -3) (undo-tree-id114 . -3) (undo-tree-id115 . -3) (undo-tree-id116 . -3) (undo-tree-id117 . -3) (undo-tree-id118 . -3) (undo-tree-id119 . -3) (undo-tree-id120 . -3) (undo-tree-id121 . -3) (undo-tree-id122 . -3) (undo-tree-id123 . -11) (undo-tree-id124 . -11) 315) nil (26384 14501 393320 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 315 . 316) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -483) (315 . 484) 286 (t 26384 14501 398067 150000)) nil (26384 14723 690843 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -194) (undo-tree-id68 . -1) 195) nil (26384 14723 690842 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 262 . 263) (nil fontified nil 194 . 263) (194 . 263) 193) nil (26384 14723 690842 0) 0 nil])
([nil nil ((#(";; (use-package eglot-booster
;;   :after eglot
;;   :straight (eglot-booster :type git :host github :repo \"jdtsmith/eglot-booster\")
;;   :config (eglot-booster-mode))
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 30 (face font-lock-comment-face fontified t) 30 35 (face font-lock-comment-delimiter-face fontified t) 35 48 (face font-lock-comment-face fontified t) 48 53 (face font-lock-comment-delimiter-face fontified t) 53 133 (face font-lock-comment-face fontified t) 133 138 (face font-lock-comment-delimiter-face fontified t) 138 167 (face font-lock-comment-face fontified t) 167 168 (face font-lock-comment-face fontified t)) . 384) (undo-tree-id3 . -161) (undo-tree-id4 . -167) (undo-tree-id5 . -28) (undo-tree-id6 . -161) (undo-tree-id7 . -28) (undo-tree-id8 . -28) (undo-tree-id9 . -28) (undo-tree-id10 . -28) (undo-tree-id11 . -28) (undo-tree-id12 . -28) (undo-tree-id13 . -28) (undo-tree-id14 . -28) (undo-tree-id15 . -28) (undo-tree-id16 . -28) (undo-tree-id17 . -47) (undo-tree-id18 . -47) (undo-tree-id19 . -47) (undo-tree-id20 . -47) (undo-tree-id21 . -47) (undo-tree-id22 . -47) (undo-tree-id23 . -47) (undo-tree-id24 . -47) (undo-tree-id25 . -47) (undo-tree-id26 . -47) (undo-tree-id27 . -47) (undo-tree-id28 . -47) (undo-tree-id29 . -47) (undo-tree-id30 . -47) (undo-tree-id31 . -47) (undo-tree-id32 . -47) (undo-tree-id33 . -76) (undo-tree-id34 . -76) (undo-tree-id35 . -76) (undo-tree-id36 . -76) (undo-tree-id37 . -76) (undo-tree-id38 . -76) (undo-tree-id39 . -76) (undo-tree-id40 . -76) (undo-tree-id41 . -76) (undo-tree-id42 . -76) (undo-tree-id43 . -76) (undo-tree-id44 . -76) (undo-tree-id45 . -76) (undo-tree-id46 . -76) (undo-tree-id47 . -76) (undo-tree-id48 . -76) (undo-tree-id49 . -133) (undo-tree-id50 . -161) (undo-tree-id51 . -161) (undo-tree-id52 . -161) (undo-tree-id53 . -161) (undo-tree-id54 . -161) (undo-tree-id55 . -161) (undo-tree-id56 . -161) (undo-tree-id57 . -161) (undo-tree-id58 . -161) (undo-tree-id59 . -161) (undo-tree-id60 . -161) (undo-tree-id61 . -161) (undo-tree-id62 . -161) (undo-tree-id63 . -161) (undo-tree-id64 . -161) (undo-tree-id65 . -161) (undo-tree-id66 . -161) (undo-tree-id67 . -168) 545) nil (26384 14723 690841 0) 0 nil])
([nil nil ((199 . 199) (199 . 205) (195 . 195) (195 . 199) (#("eglot-booster" 0 13 (fontified t)) . 195) (undo-tree-id0 . -12) (undo-tree-id1 . -13) (undo-tree-id2 . -13)) nil (26384 14723 690818 0) 0 nil])
([nil nil ((240 . 251) (#("-" 0 1 (face font-lock-string-face fontified t)) . -240) (undo-tree-id69 . -1) 241 (240 . 241) (#("[" 0 1 (face font-lock-string-face fontified nil)) . -240) (undo-tree-id70 . -1) (#("]" 0 1 (face font-lock-string-face fontified t)) . 241) (236 . 242) (#("jdtsmith/eglot-booster" 0 22 (face font-lock-string-face fontified t)) . 236) (undo-tree-id71 . -6) (undo-tree-id72 . -21) (undo-tree-id73 . -6) 242 (t 26384 14723 694267 55000)) nil (26384 14760 609160 0) 0 nil])
([nil nil ((#("  :straight (nord-theme :type git :host github :repo \"nordtheme/emacs\")
  :config
  (add-to-list 'custom-theme-load-path (expand-file-name \"~/.emacs.d/themes/\"))
  (load-theme 'nord-theme t))
" 0 2 (fontified t) 2 11 (face font-lock-builtin-face fontified t) 11 12 (fontified t) 12 13 (face (rainbow-delimiters-depth-2-face) fontified t) 13 23 (fontified t) 23 24 (fontified t) 24 29 (face font-lock-builtin-face fontified t) 29 34 (fontified t) 34 39 (face font-lock-builtin-face fontified t) 39 47 (fontified t) 47 52 (face font-lock-builtin-face fontified t) 52 53 (fontified t) 53 69 (face font-lock-string-face fontified t) 69 70 (face font-lock-string-face fontified t) 70 71 (face (rainbow-delimiters-depth-2-face) rear-nonsticky t fontified t) 71 72 (fontified t) 72 74 (fontified t) 74 81 (face font-lock-builtin-face fontified t) 81 84 (fontified t) 84 85 (face (rainbow-delimiters-depth-2-face) fontified t) 85 121 (fontified t) 121 122 (face (rainbow-delimiters-depth-3-face) fontified t) 122 139 (fontified t) 139 159 (face font-lock-string-face fontified t) 159 160 (face (rainbow-delimiters-depth-3-face) fontified t) 160 161 (face (rainbow-delimiters-depth-2-face) fontified t) 161 162 (fontified t) 162 164 (fontified t) 164 165 (face (rainbow-delimiters-depth-2-face) fontified t) 165 189 (fontified t) 189 190 (face (rainbow-delimiters-depth-2-face) fontified t) 190 191 (face (rainbow-delimiters-depth-1-face) fontified t) 191 192 (fontified t rear-nonsticky t)) . 182) (undo-tree-id74 . -191) (undo-tree-id75 . -191) (undo-tree-id76 . 123) (undo-tree-id77 . -12) (undo-tree-id78 . -70) (undo-tree-id79 . -191) (undo-tree-id80 . -70) (undo-tree-id81 . -70) (undo-tree-id82 . -70) (undo-tree-id83 . -70) (undo-tree-id84 . -70) (undo-tree-id85 . -70) (undo-tree-id86 . -70) (undo-tree-id87 . -70) (undo-tree-id88 . -70) (undo-tree-id89 . -70) (undo-tree-id90 . -70) (undo-tree-id91 . -70) (undo-tree-id92 . -70) (undo-tree-id93 . -70) (undo-tree-id94 . -70) (undo-tree-id95 . -70) (undo-tree-id96 . -70) (undo-tree-id97 . -70) (undo-tree-id98 . -70) (undo-tree-id99 . -70) (undo-tree-id100 . -70) (undo-tree-id101 . -70) (undo-tree-id102 . -70) (undo-tree-id103 . -70) (undo-tree-id104 . -70) (undo-tree-id105 . -70) (undo-tree-id106 . -70) (undo-tree-id107 . -70) (undo-tree-id108 . -70) (undo-tree-id109 . -70) (undo-tree-id110 . -70) (undo-tree-id111 . -70) (undo-tree-id112 . -70) (undo-tree-id113 . -70) (undo-tree-id114 . -81) (undo-tree-id115 . -81) (undo-tree-id116 . -81) (undo-tree-id117 . -81) (undo-tree-id118 . -81) (undo-tree-id119 . -81) (undo-tree-id120 . -81) (undo-tree-id121 . -81) (undo-tree-id122 . -81) (undo-tree-id123 . -81) (undo-tree-id124 . -81) (undo-tree-id125 . -81) (undo-tree-id126 . -81) (undo-tree-id127 . -81) (undo-tree-id128 . -81) (undo-tree-id129 . -81) (undo-tree-id130 . -152) (undo-tree-id131 . -152) (undo-tree-id132 . -152) (undo-tree-id133 . -152) (undo-tree-id134 . -152) (undo-tree-id135 . -152) (undo-tree-id136 . -152) (undo-tree-id137 . -152) (undo-tree-id138 . -152) (undo-tree-id139 . -152) (undo-tree-id140 . -152) (undo-tree-id141 . -152) (undo-tree-id142 . -152) (undo-tree-id143 . -152) (undo-tree-id144 . -152) (undo-tree-id145 . -152) (undo-tree-id146 . -162) (undo-tree-id147 . -191) (undo-tree-id148 . -191) (undo-tree-id149 . -191) (undo-tree-id150 . -191) (undo-tree-id151 . -191) (undo-tree-id152 . -191) (undo-tree-id153 . -191) (undo-tree-id154 . -191) (undo-tree-id155 . -191) (undo-tree-id156 . -191) (undo-tree-id157 . -191) (undo-tree-id158 . -191) (undo-tree-id159 . -191) (undo-tree-id160 . -191) (undo-tree-id161 . -190) (undo-tree-id162 . -191) (undo-tree-id163 . -191) (undo-tree-id164 . -191) (undo-tree-id165 . -191) (undo-tree-id166 . -192) 373 (t 26384 14760 613042 477000)) nil (26384 14817 511471 0) 0 nil])
([nil nil ((181 . 182) (#(")" 0 1 (face font-lock-constant-face fontified nil)) . -181) (181 . 182)) nil (26384 14817 511436 0) 0 nil])
([nil nil ((181 . 193)) nil (26384 14817 511433 0) 0 nil])
([nil nil ((181 . 184) (#(" " 0 1 (fontified t)) . -181) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) 182 (t 26384 14817 515842 990000)) nil (26384 14823 905583 0) 0 nil])
([nil nil ((825 . 827) (824 . 825) (t 26384 14823 912357 444000) 824) nil (26384 14844 451605 0) 0 nil])
([nil nil ((827 . 828) 825) nil (26384 14844 451605 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 904 . 905) (nil fontified nil 828 . 905) (828 . 905)) nil (26384 14844 451604 0) 0 nil])
([nil nil ((#("()
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 3 (fontified t)) . 825) (undo-tree-id192 . -3) (undo-tree-id193 . -2) (undo-tree-id194 . -3) (undo-tree-id195 . -3) (undo-tree-id196 . -3) (undo-tree-id197 . -3) (undo-tree-id198 . -3) (undo-tree-id199 . -3) (undo-tree-id200 . -3) (undo-tree-id201 . -3) (undo-tree-id202 . -3) (undo-tree-id203 . -3) (undo-tree-id204 . -3) (undo-tree-id205 . -3) (undo-tree-id206 . -3) (undo-tree-id207 . -3) (undo-tree-id208 . -3) (undo-tree-id209 . -3) (undo-tree-id210 . -3) (undo-tree-id211 . -3) (undo-tree-id212 . -3) (undo-tree-id213 . -3) (undo-tree-id214 . -3) (undo-tree-id215 . -3) (undo-tree-id216 . -3) (undo-tree-id217 . -3) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -3) 826) nil (26384 14844 451603 0) 0 nil])
([nil nil ((902 . 903)) nil (26384 14933 215308 0) 0 nil])
([nil nil ((#("  :straight t)
" 0 2 (fontified t) 2 11 (face font-lock-builtin-face fontified t) 11 13 (fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 15 (fontified t)) . 182) (undo-tree-id81 . -14) (undo-tree-id82 . -15) (undo-tree-id83 . -15) (undo-tree-id84 . -15) (undo-tree-id85 . -15) (undo-tree-id86 . -15) (undo-tree-id87 . -15) (undo-tree-id88 . -15) (undo-tree-id89 . -15) (undo-tree-id90 . -15) (undo-tree-id91 . -15) (undo-tree-id92 . -15) (undo-tree-id93 . -15) (undo-tree-id94 . -15) (undo-tree-id95 . -15) (undo-tree-id96 . -15) (undo-tree-id97 . -15) (undo-tree-id98 . -15) (undo-tree-id99 . -15) (undo-tree-id100 . -15) (undo-tree-id101 . -15) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -3) (undo-tree-id120 . -3) (undo-tree-id121 . -3) (undo-tree-id122 . -3) (undo-tree-id123 . -3) (undo-tree-id124 . -3) (undo-tree-id125 . -3) (undo-tree-id126 . -3) (undo-tree-id127 . -3) (undo-tree-id128 . -3) (undo-tree-id129 . -3) (undo-tree-id130 . -3) (undo-tree-id131 . -3) (undo-tree-id132 . -3) (undo-tree-id133 . -3) (undo-tree-id134 . -3) (undo-tree-id135 . -3) (undo-tree-id136 . -3) (undo-tree-id137 . -3) (undo-tree-id138 . -3) (undo-tree-id139 . -3) (undo-tree-id140 . -3) (undo-tree-id141 . -3) (undo-tree-id142 . -3) (undo-tree-id143 . -3) (undo-tree-id144 . -3) (undo-tree-id145 . -3) (undo-tree-id146 . -3) (undo-tree-id147 . -3) (undo-tree-id148 . -3) (undo-tree-id149 . -3) (undo-tree-id150 . -15) 185) nil (26384 14939 816934 0) 0 nil] [nil nil ((#("
(use-package nord-theme
  :straight t)
" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 24 (face font-lock-constant-face fontified t) 24 27 (fontified t) 27 36 (face font-lock-builtin-face fontified t) 36 38 (fontified t) 38 39 (face (rainbow-delimiters-depth-1-face) fontified t) 39 40 (fontified t)) . 157) (undo-tree-id77 . -25) (undo-tree-id78 . -25) (undo-tree-id79 . -25) (undo-tree-id80 . -39) 182 (t 26384 14844 456700 91000)) ((157 . 197)) (26384 14933 105830 0) 0 nil])
([nil nil ((181 . 182) (#(")" 0 1 (face font-lock-constant-face fontified nil)) . -181) (181 . 182)) nil (26384 14962 647207 0) 0 nil])
([nil nil ((#("
(use-package doom-modeline
  :init (doom-modeline-mode 1))
" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 27 (face font-lock-constant-face fontified t) 27 30 (fontified t) 30 35 (face font-lock-builtin-face fontified t) 35 36 (fontified t) 36 37 (face (rainbow-delimiters-depth-2-face) fontified t) 37 57 (fontified t) 57 58 (face (rainbow-delimiters-depth-2-face) fontified t) 58 59 (face (rainbow-delimiters-depth-1-face) fontified t) 59 60 (fontified t)) . 157) (undo-tree-id0 . -28) (undo-tree-id1 . -28) (undo-tree-id2 . -59) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -28) (undo-tree-id9 . -28) (undo-tree-id10 . -28) (undo-tree-id11 . -28) (undo-tree-id12 . -28) (undo-tree-id13 . -60) (undo-tree-id14 . -60) (undo-tree-id15 . -60) (undo-tree-id16 . -60) (undo-tree-id17 . -60) (undo-tree-id18 . -60) (undo-tree-id19 . -60) (undo-tree-id20 . -60) (undo-tree-id21 . -60) (undo-tree-id22 . -60) (undo-tree-id23 . -60) (undo-tree-id24 . -60) (undo-tree-id25 . -60) (undo-tree-id26 . -60) (undo-tree-id27 . -60) (undo-tree-id28 . -28) (undo-tree-id29 . -28) (undo-tree-id30 . -28) (undo-tree-id31 . -28) (undo-tree-id32 . -28) (undo-tree-id33 . -28) (undo-tree-id34 . -28) (undo-tree-id35 . -28) (undo-tree-id36 . -28) (undo-tree-id37 . -28) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -28) (undo-tree-id59 . -28) (undo-tree-id60 . -28) (undo-tree-id61 . -28) (undo-tree-id62 . -28) (undo-tree-id63 . -28) (undo-tree-id64 . -28) (undo-tree-id65 . -28) (undo-tree-id66 . -28) (undo-tree-id67 . -28) (undo-tree-id68 . -28) (undo-tree-id69 . -28) (undo-tree-id70 . -28) (undo-tree-id71 . -28) (undo-tree-id72 . -28) (undo-tree-id73 . -28) (undo-tree-id74 . -28) (undo-tree-id75 . -28) (undo-tree-id76 . -60) 185) ((157 . 217) (t 26384 14932 700984 693000)) (26384 14932 693899 0) 0 nil])
([nil nil ((913 . 915) (911 . 913) (906 . 911) (891 . 891) (891 . 906) (890 . 892) (889 . 890) (t 26384 14939 822049 171000) 889) nil (26384 14971 762092 0) 0 nil] [nil nil ((163 . 176) (162 . 163) (159 . 159) (159 . 162) (158 . 160) (155 . 158) (t 26384 14939 822049 171000)) ((#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 155) (undo-tree-id613 . -3) (undo-tree-id614 . -3) (undo-tree-id615 . -3) (undo-tree-id616 . -3) (undo-tree-id617 . -3) (undo-tree-id618 . -3) (undo-tree-id619 . -3) (undo-tree-id620 . -3) (undo-tree-id621 . -3) (undo-tree-id622 . -3) (undo-tree-id623 . -3) (undo-tree-id624 . -3) (undo-tree-id625 . -3) (undo-tree-id626 . -3) (undo-tree-id627 . -3) (undo-tree-id628 . -3) (undo-tree-id629 . -3) (undo-tree-id630 . -3) (undo-tree-id631 . -3) (undo-tree-id632 . -3) (undo-tree-id633 . -3) (undo-tree-id634 . -3) (undo-tree-id635 . -3) (undo-tree-id636 . -3) (undo-tree-id637 . -3) (undo-tree-id638 . -3) (undo-tree-id639 . -3) (undo-tree-id640 . -3) (undo-tree-id641 . -3) (undo-tree-id642 . -3) (undo-tree-id643 . -3) (undo-tree-id644 . -3) (undo-tree-id645 . -3) (undo-tree-id646 . -3) (undo-tree-id647 . -3) (undo-tree-id648 . -3) (undo-tree-id649 . -3) (undo-tree-id650 . -3) (undo-tree-id651 . -3) (undo-tree-id652 . -3) (undo-tree-id653 . -3) (undo-tree-id654 . -3) (undo-tree-id655 . -3) (undo-tree-id656 . -3) (undo-tree-id657 . -3) (undo-tree-id658 . -3) (undo-tree-id659 . -3) (undo-tree-id660 . -3) (undo-tree-id661 . -3) (undo-tree-id662 . -3) (undo-tree-id663 . -3) (undo-tree-id664 . -3) (undo-tree-id665 . -3) (undo-tree-id666 . -3) (undo-tree-id667 . -3) (undo-tree-id668 . -3) (undo-tree-id669 . -3) (undo-tree-id670 . -3) (undo-tree-id671 . -3) (undo-tree-id672 . -3) (undo-tree-id673 . -3) (undo-tree-id674 . -3) (undo-tree-id675 . -3) (undo-tree-id676 . -3) (undo-tree-id677 . -3) (undo-tree-id678 . -3) (undo-tree-id679 . -3) (undo-tree-id680 . -3) (undo-tree-id681 . -3) (undo-tree-id682 . -3) (undo-tree-id683 . -3) (undo-tree-id684 . -3) (undo-tree-id685 . -3) (undo-tree-id686 . -3) (undo-tree-id687 . -3) (undo-tree-id688 . -3) (undo-tree-id689 . -3) (undo-tree-id690 . -3) (undo-tree-id691 . -3) (undo-tree-id692 . -3) (undo-tree-id693 . -3) (undo-tree-id694 . -1) (undo-tree-id695 . -3) (undo-tree-id696 . -3) (undo-tree-id697 . -3) (undo-tree-id698 . -3) (undo-tree-id699 . -3) (undo-tree-id700 . -3) (undo-tree-id701 . -3) (undo-tree-id702 . -3) (undo-tree-id703 . -3) (undo-tree-id704 . -3) (undo-tree-id705 . -3) (undo-tree-id706 . -3) (undo-tree-id707 . -3) (undo-tree-id708 . -3) (undo-tree-id709 . -3) (undo-tree-id710 . -3) (undo-tree-id711 . -3) (undo-tree-id712 . -3) (undo-tree-id713 . -3) (undo-tree-id714 . -3) (undo-tree-id715 . -3) (undo-tree-id716 . -3) (undo-tree-id717 . -3) (undo-tree-id718 . -3) (undo-tree-id719 . -3) (undo-tree-id720 . -3) (undo-tree-id721 . -3) (undo-tree-id722 . -3) (undo-tree-id723 . -3) (undo-tree-id724 . -3) (undo-tree-id725 . -3) (undo-tree-id726 . -3) (#("()" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 158) (undo-tree-id727 . -2) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -2) (undo-tree-id732 . -2) (undo-tree-id733 . -2) (undo-tree-id734 . -2) (undo-tree-id735 . -2) (undo-tree-id736 . -2) (undo-tree-id737 . -2) (undo-tree-id738 . -2) (undo-tree-id739 . -2) (undo-tree-id740 . -2) (undo-tree-id741 . -2) (undo-tree-id742 . -2) (undo-tree-id743 . -2) (undo-tree-id744 . -2) (undo-tree-id745 . -2) (undo-tree-id746 . -2) (undo-tree-id747 . -2) (undo-tree-id748 . -2) (undo-tree-id749 . -2) (undo-tree-id750 . -2) (undo-tree-id751 . -2) (undo-tree-id752 . -2) (undo-tree-id753 . -2) (undo-tree-id754 . -2) (undo-tree-id755 . -2) (undo-tree-id756 . -2) (undo-tree-id757 . -2) (undo-tree-id758 . -2) (undo-tree-id759 . -2) (undo-tree-id760 . -2) (undo-tree-id761 . -2) (undo-tree-id762 . -2) (undo-tree-id763 . -2) (undo-tree-id764 . -2) (undo-tree-id765 . -2) (undo-tree-id766 . -2) (undo-tree-id767 . -2) (undo-tree-id768 . -2) (undo-tree-id769 . -2) (undo-tree-id770 . -2) (undo-tree-id771 . -2) (undo-tree-id772 . -2) (undo-tree-id773 . -2) (undo-tree-id774 . -2) (undo-tree-id775 . -2) (undo-tree-id776 . -2) (undo-tree-id777 . -2) (undo-tree-id778 . -2) (undo-tree-id779 . -2) (undo-tree-id780 . -2) (undo-tree-id781 . -2) (undo-tree-id782 . -2) (undo-tree-id783 . -2) (undo-tree-id784 . -2) (undo-tree-id785 . -2) (undo-tree-id786 . -2) (undo-tree-id787 . -2) (undo-tree-id788 . -2) (undo-tree-id789 . -2) (undo-tree-id790 . -2) (undo-tree-id791 . -2) (undo-tree-id792 . -2) (undo-tree-id793 . -2) (undo-tree-id794 . -2) (undo-tree-id795 . -2) (undo-tree-id796 . -2) (undo-tree-id797 . -2) (undo-tree-id798 . -2) (undo-tree-id799 . -2) (undo-tree-id800 . -2) (undo-tree-id801 . -2) (undo-tree-id802 . -2) (undo-tree-id803 . -2) (undo-tree-id804 . -2) (undo-tree-id805 . -2) (undo-tree-id806 . -2) (undo-tree-id807 . -2) (undo-tree-id808 . -2) (undo-tree-id809 . -2) (undo-tree-id810 . -2) (undo-tree-id811 . -2) (undo-tree-id812 . -2) (undo-tree-id813 . -2) (undo-tree-id814 . -2) (undo-tree-id815 . -2) (undo-tree-id816 . -2) (undo-tree-id817 . -2) (undo-tree-id818 . -2) (undo-tree-id819 . -2) (undo-tree-id820 . -2) (undo-tree-id821 . -2) (undo-tree-id822 . -2) (undo-tree-id823 . -2) (undo-tree-id824 . -2) (undo-tree-id825 . -2) (undo-tree-id826 . -2) (undo-tree-id827 . -2) (undo-tree-id828 . -2) (undo-tree-id829 . -2) (undo-tree-id830 . -2) (undo-tree-id831 . -2) (undo-tree-id832 . -2) (undo-tree-id833 . -2) (undo-tree-id834 . -2) (undo-tree-id835 . -2) (undo-tree-id836 . -2) (undo-tree-id837 . -2) (undo-tree-id838 . -2) (undo-tree-id839 . -2) (#("cat" 0 3 (fontified nil)) . 159) (undo-tree-id840 . -3) (undo-tree-id841 . -3) (undo-tree-id842 . -3) (#("p" 0 1 (fontified nil)) . 162) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (#("puccin-reload" 0 13 (fontified t)) . 163)) (26384 14961 368358 0) 0 nil])
nil
([nil nil ((916 . 917)) nil (26384 14971 762088 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -182) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (#("o" 0 1 (fontified t)) . -183) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (#("d" 0 1 (fontified t)) . -184) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (#("-" 0 1 (fontified t)) . -185) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) 186 (181 . 181) (181 . 186) (180 . 182) (177 . 180)) ((#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 177) (undo-tree-id377 . -3) (undo-tree-id378 . -3) (undo-tree-id379 . -3) (undo-tree-id380 . -3) (undo-tree-id381 . -3) (undo-tree-id382 . -3) (undo-tree-id383 . -3) (undo-tree-id384 . -3) (undo-tree-id385 . -3) (undo-tree-id386 . -3) (undo-tree-id387 . -3) (undo-tree-id388 . -3) (undo-tree-id389 . -3) (undo-tree-id390 . -3) (undo-tree-id391 . -3) (undo-tree-id392 . -3) (undo-tree-id393 . -3) (undo-tree-id394 . -3) (undo-tree-id395 . -3) (undo-tree-id396 . -3) (undo-tree-id397 . -3) (undo-tree-id398 . -3) (undo-tree-id399 . -3) (undo-tree-id400 . -3) (undo-tree-id401 . -3) (undo-tree-id402 . -3) (undo-tree-id403 . -3) (undo-tree-id404 . -3) (undo-tree-id405 . -3) (undo-tree-id406 . -3) (undo-tree-id407 . -3) (undo-tree-id408 . -3) (undo-tree-id409 . -3) (undo-tree-id410 . -3) (undo-tree-id411 . -3) (undo-tree-id412 . -3) (undo-tree-id413 . -3) (undo-tree-id414 . -3) (undo-tree-id415 . -3) (undo-tree-id416 . -3) (undo-tree-id417 . -3) (undo-tree-id418 . -3) (undo-tree-id419 . -3) (undo-tree-id420 . -3) (undo-tree-id421 . -3) (undo-tree-id422 . -3) (undo-tree-id423 . -3) (undo-tree-id424 . -3) (undo-tree-id425 . -3) (undo-tree-id426 . -3) (undo-tree-id427 . -3) (undo-tree-id428 . -3) (undo-tree-id429 . -3) (undo-tree-id430 . -3) (undo-tree-id431 . -3) (undo-tree-id432 . -3) (undo-tree-id433 . -3) (undo-tree-id434 . -3) (undo-tree-id435 . -3) (undo-tree-id436 . -3) (undo-tree-id437 . -3) (undo-tree-id438 . -3) (undo-tree-id439 . -3) (undo-tree-id440 . -3) (undo-tree-id441 . -3) (undo-tree-id442 . -3) (undo-tree-id443 . -3) (undo-tree-id444 . -3) (undo-tree-id445 . -3) (undo-tree-id446 . -3) (undo-tree-id447 . -3) (undo-tree-id448 . -3) (undo-tree-id449 . -3) (undo-tree-id450 . -3) (undo-tree-id451 . -3) (undo-tree-id452 . -3) (undo-tree-id453 . -3) (undo-tree-id454 . -1) (undo-tree-id455 . -3) (undo-tree-id456 . -3) (#("()" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 180) (undo-tree-id457 . -1) (undo-tree-id458 . 1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (#("laod-" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil)) . 181) (undo-tree-id537 . -2) (undo-tree-id538 . -2) (undo-tree-id539 . -2) (undo-tree-id540 . -2) (undo-tree-id541 . -2) (undo-tree-id542 . -2) (undo-tree-id543 . -3) (undo-tree-id544 . -3) (undo-tree-id545 . -3) (undo-tree-id546 . -3) (undo-tree-id547 . -3) (undo-tree-id548 . -3) (undo-tree-id549 . -4) (undo-tree-id550 . -4) (undo-tree-id551 . -4) (undo-tree-id552 . -4) (undo-tree-id553 . -4) (undo-tree-id554 . -4) (undo-tree-id555 . -4) (undo-tree-id556 . -4) (undo-tree-id557 . -4) (undo-tree-id558 . -4) (undo-tree-id559 . -4) (undo-tree-id560 . -5) (undo-tree-id561 . -5) (undo-tree-id562 . -5) (undo-tree-id563 . -5) (undo-tree-id564 . -5) (undo-tree-id565 . -5) (undo-tree-id566 . -5) (undo-tree-id567 . -5) (undo-tree-id568 . -5) (undo-tree-id569 . -5) (undo-tree-id570 . -5) (undo-tree-id571 . -5) (undo-tree-id572 . -5) (undo-tree-id573 . -5) (undo-tree-id574 . -5) (undo-tree-id575 . -5) (undo-tree-id576 . -5) (undo-tree-id577 . -5) (undo-tree-id578 . -5) (undo-tree-id579 . -5) (undo-tree-id580 . -5) (undo-tree-id581 . -5) (undo-tree-id582 . -5) (undo-tree-id583 . -5) (undo-tree-id584 . -5) (undo-tree-id585 . -4) (undo-tree-id586 . -4) (undo-tree-id587 . -4) (undo-tree-id588 . -4) (undo-tree-id589 . -4) (undo-tree-id590 . -4) (undo-tree-id591 . -3) (undo-tree-id592 . -3) (undo-tree-id593 . -3) (undo-tree-id594 . -3) (undo-tree-id595 . -3) (undo-tree-id596 . -3) (undo-tree-id597 . -3) (undo-tree-id598 . -3) (undo-tree-id599 . -3) (undo-tree-id600 . -3) (undo-tree-id601 . -3) (undo-tree-id602 . -2) (undo-tree-id603 . -2) (undo-tree-id604 . -2) (undo-tree-id605 . -2) (undo-tree-id606 . -2) (undo-tree-id607 . -2) (undo-tree-id608 . -2) (undo-tree-id609 . -2) (undo-tree-id610 . -2) (undo-tree-id611 . -2) (undo-tree-id612 . -2) (182 . 186)) (26384 14961 368101 0) 0 nil] [nil nil ((163 . 165) (159 . 159) (159 . 163) (158 . 160) (155 . 158) 141) ((#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 155) (undo-tree-id151 . -3) (undo-tree-id152 . -1) (undo-tree-id153 . -3) (undo-tree-id154 . -3) (undo-tree-id155 . -3) (#("()" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 158) (undo-tree-id156 . -1) (undo-tree-id157 . 1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#("load" 0 4 (fontified nil)) . 159) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (#("[]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t) 1 2 (face (rainbow-delimiters-depth-3-face) fontified t)) . 163) (undo-tree-id165 . 1) (undo-tree-id166 . -1)) (26384 14956 758113 0) 0 nil])
([nil nil ((903 . 903) (903 . 907) (#("catppuccin" 0 10 (fontified t)) . 903) (undo-tree-id0 . -10) (undo-tree-id1 . -10) (undo-tree-id2 . -9) (t 26384 14971 767342 331000)) nil (26384 15559 223954 0) 0 nil])
nil
nil
([nil nil ((#("
" 0 1 (fontified t)) . 889) (undo-tree-id3 . -1) (t 26384 15559 228546 259000)) nil (26384 15560 621632 0) 0 nil])
([nil nil ((#("
(add-to-list 'custom-theme-load-path (expand-file-name \"~/.emacs.d/themes/\"))
(load-theme 'nord t)
" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 38 (fontified t) 38 39 (face (rainbow-delimiters-depth-2-face) fontified t) 39 56 (fontified t) 56 76 (face font-lock-string-face fontified t) 76 77 (face (rainbow-delimiters-depth-2-face) fontified t) 77 78 (face (rainbow-delimiters-depth-1-face) fontified t) 78 79 (fontified t) 79 80 (face (rainbow-delimiters-depth-1-face) fontified t) 80 98 (fontified t) 98 99 (face (rainbow-delimiters-depth-1-face) fontified t) 99 100 (fontified t)) . 810) (undo-tree-id4 . -100) (undo-tree-id5 . -99) (undo-tree-id6 . -96) (undo-tree-id7 . 4) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -100) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -79) (undo-tree-id133 . -79) (undo-tree-id134 . -79) (undo-tree-id135 . -79) (undo-tree-id136 . -79) (undo-tree-id137 . -79) (undo-tree-id138 . -79) (undo-tree-id139 . -79) (undo-tree-id140 . -79) (undo-tree-id141 . -79) (undo-tree-id142 . -100) (undo-tree-id143 . -100) (undo-tree-id144 . -100) (undo-tree-id145 . -100) (undo-tree-id146 . -100) (undo-tree-id147 . -100) (undo-tree-id148 . -100) (undo-tree-id149 . -100) (undo-tree-id150 . -100) (undo-tree-id151 . -100) (undo-tree-id152 . -100) (undo-tree-id153 . -100) (undo-tree-id154 . -100) (undo-tree-id155 . -100) (undo-tree-id156 . -1) (undo-tree-id157 . -100) (undo-tree-id158 . -100) (undo-tree-id159 . -100) (undo-tree-id160 . -100) (undo-tree-id161 . -100) 910 (t 26384 15560 625474 926000)) nil (26384 15664 164811 0) 0 nil])
([nil nil ((#("(use-package nord-theme)
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 23 (fontified t) 23 24 (face (rainbow-delimiters-depth-1-face) fontified t) 24 25 (fontified t)) . 158) (undo-tree-id163 . -24) (undo-tree-id164 . -13) (undo-tree-id165 . -13) (undo-tree-id166 . -13) (undo-tree-id167 . -13) (undo-tree-id168 . -13) (undo-tree-id169 . -13) (undo-tree-id170 . -13) (undo-tree-id171 . -13) (undo-tree-id172 . -13) (undo-tree-id173 . -13) (undo-tree-id174 . -13) (undo-tree-id175 . -13) (undo-tree-id176 . -13) (undo-tree-id177 . -13) (undo-tree-id178 . -13) (undo-tree-id179 . -13) (undo-tree-id180 . -13) (undo-tree-id181 . -13) (undo-tree-id182 . -13) (undo-tree-id183 . -13) (undo-tree-id184 . -13) (undo-tree-id185 . -13) (undo-tree-id186 . -13) (undo-tree-id187 . -13) (undo-tree-id188 . -13) (undo-tree-id189 . -13) (undo-tree-id190 . -13) (undo-tree-id191 . -13) (undo-tree-id192 . -13) (undo-tree-id193 . -13) (undo-tree-id194 . -13) (undo-tree-id195 . -13) (undo-tree-id196 . -13) (undo-tree-id197 . -13) (undo-tree-id198 . -13) (undo-tree-id199 . -13) (undo-tree-id200 . -13) (undo-tree-id201 . -13) (undo-tree-id202 . -25) 171 (t 26384 15664 169507 7000)) nil (26384 15668 56202 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 158) (undo-tree-id162 . -1)) nil (26384 15679 425460 0) 0 nil])
([nil nil ((117 . 117) (117 . 123) (#("init" 0 4 (face font-lock-builtin-face fontified t)) . 117) (undo-tree-id247 . -3) (undo-tree-id248 . -3) 120 (t 26384 15668 60430 564000)) nil (26384 15828 97904 0) 0 nil] [nil nil ((162 . 165) (159 . 159) (159 . 162) (158 . 160) (155 . 158) (t 26384 15668 60430 564000)) ((#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 155) (undo-tree-id203 . -3) (undo-tree-id204 . -3) (undo-tree-id205 . -3) (undo-tree-id206 . -3) (undo-tree-id207 . -3) (undo-tree-id208 . -1) (undo-tree-id209 . -3) (#("()" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 158) (undo-tree-id210 . -1) (undo-tree-id211 . 1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (#("cat" 0 3 (fontified nil)) . 159) (undo-tree-id217 . -3) (undo-tree-id218 . -3) (undo-tree-id219 . -3) (undo-tree-id220 . -3) (undo-tree-id221 . -3) (undo-tree-id222 . -3) (#("ppu" 0 3 (fontified t)) . 162) (undo-tree-id223 . -2) (undo-tree-id224 . -3) (undo-tree-id225 . -3) (undo-tree-id226 . -2) (undo-tree-id227 . -3) (undo-tree-id228 . -2)) (26384 15679 424569 0) 0 nil])
([nil nil ((172 . 178) (167 . 172) (161 . 161) (161 . 167) (160 . 162) (157 . 160)) nil (26384 15828 97903 0) 0 nil])
nil
([nil nil ((814 . 814) (814 . 820) (810 . 810) (810 . 814) (809 . 811) (808 . 809) (807 . 808) 780) nil (26384 15828 97902 0) 0 nil])
([nil nil ((#("(load-theme)
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 11 (fontified t) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t) 12 13 (fontified t)) . 809) (undo-tree-id238 . -12) (undo-tree-id239 . -13) (undo-tree-id240 . 2) (undo-tree-id241 . -13) (undo-tree-id242 . -13) (undo-tree-id243 . -13) (undo-tree-id244 . -13) (undo-tree-id245 . -11) (undo-tree-id246 . -10) 819) nil (26384 15828 97901 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -808) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) 809) nil (26384 15828 97897 0) 0 nil])
([nil nil ((203 . 203) (203 . 208) (202 . 203) (199 . 199) (199 . 202) (183 . 183) (183 . 199) (182 . 184) (181 . 182) (180 . 181) (t 26384 15828 103180 204000) 158) nil (26384 15960 706831 0) 0 nil])
([nil nil ((202 . 202) (202 . 208) (198 . 198) (198 . 202) (195 . 195) (195 . 198) (195 . 196) (#(")" 0 1 (fontified nil)) . -195) (195 . 196) (#("gruvbox-theme)" 0 13 (fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t)) . 195) (undo-tree-id0 . -14) (undo-tree-id1 . -14) (undo-tree-id2 . -14) (undo-tree-id3 . -14) (undo-tree-id4 . -13) (t 26384 15960 714323 97000)) nil (26384 16240 723411 0) 0 nil])
([nil nil ((839 . 850) (838 . 840) (837 . 838) (836 . 837) (t 26384 16240 728395 621000) 809) nil (26384 16497 344865 0) 0 nil])
([nil nil ((851 . 854) (#("r" 0 1 (fontified t)) . -851) (undo-tree-id10 . -1) (#("d" 0 1 (fontified t)) . -852) (undo-tree-id11 . -1) (#("a" 0 1 (fontified t)) . -853) (undo-tree-id12 . -1) 854 (850 . 854)) nil (26384 16497 344864 0) 0 nil])
([nil nil ((#("
(load-theme 'dra)
" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 17 (fontified t) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t) 18 19 (fontified t)) . 837) (undo-tree-id0 . -1) (undo-tree-id1 . 2) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -12) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -19) (undo-tree-id9 . -18) 838) nil (26384 16497 344860 0) 0 nil])
([nil nil ((#("
(use-package dracula-theme)
" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 13 (face font-lock-keyword-face fontified t) 13 27 (fontified t) 27 28 (face (rainbow-delimiters-depth-1-face) fontified t) 28 29 (fontified t)) . 181) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -28) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -29) 182 (t 26384 16497 348452 707000)) nil (26384 16502 408815 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -161) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) 162 (161 . 162) (84 . 85) (84 . 85) (t 26384 16502 415385 254000)) nil (26384 16571 494998 0) 0 nil])
([nil nil ((#("(catppuccin-reload)" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 18 (fontified t) 18 19 (face (rainbow-delimiters-depth-2-face) fontified t)) . 162) (undo-tree-id350 . -18) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -19) 163) nil (26384 16571 494990 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -159) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#(" " 0 1 (fontified t)) . -160) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (#(" " 0 1 (fontified t)) . -161) (undo-tree-id279 . 1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) 162) nil (26384 16571 494977 0) 0 nil])
([nil nil ((#("I" 0 1 (fontified t)) . -84) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) 85 (t 26384 16571 500882 366000)) nil (26384 16574 702601 0) 0 nil])
([nil nil ((105 . 118) (85 . 105) (84 . 86) (83 . 84) (t 26384 16574 707153 212000) 83) nil (26384 16589 266064 0) 0 nil])
([nil nil ((84 . 85) (84 . 85) 117) nil (26384 16591 404497 0) 0 nil])
([nil nil ((919 . 923) (#(")" 0 1 (fontified nil)) . -918) (918 . 919) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -918) (909 . 919) (889 . 909) (888 . 890) (887 . 888) (#(")" 0 1 (fontified nil)) . -886) (886 . 887) (#(")" 0 1 (fontified nil)) . -886) (886 . 887) (#("\"" 0 1 (fontified nil)) . -885) (885 . 886) (#("\"" 0 1 (fontified nil)) . -885) (868 . 886) (867 . 869) (#("\"" 0 1 (fontified nil)) . -867) (847 . 868) (831 . 847) (826 . 832) (825 . 826) (824 . 825) 798) nil (26384 16596 283145 0) 0 nil] [nil nil ((849 . 853) (848 . 849) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -848) (839 . 849) (818 . 839) (817 . 818) (816 . 817) (#(")" 0 1 (fontified nil)) . -816) (816 . 817) (#("\"" 0 1 (fontified nil)) . -815) (815 . 816) (#("\"" 0 1 (fontified nil)) . -815) (804 . 816) (798 . 804) (797 . 799) (#("\"" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -797) (783 . 798) (762 . 783)) ((#("dd-to-list 'custom-th" 0 21 (fontified nil)) . 762) (undo-tree-id408 . -21) (undo-tree-id409 . -21) (undo-tree-id410 . -21) (undo-tree-id411 . -21) (#("eme-load-path \"" 0 14 (fontified nil) 14 15 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 783) (undo-tree-id412 . -14) (undo-tree-id413 . -14) (undo-tree-id414 . -14) (undo-tree-id415 . -14) (797 . 798) (#("\"\"" 0 1 (face font-lock-string-face fontified nil) 1 2 (face font-lock-string-face fontified nil)) . 797) (undo-tree-id416 . -2) (undo-tree-id417 . -2) (undo-tree-id418 . -2) (undo-tree-id419 . -2) (#("~/.ema" 0 6 (face font-lock-string-face fontified nil)) . 798) (#("cs.d/themes\"" 0 11 (face font-lock-string-face fontified nil) 11 12 (fontified nil)) . 804) (815 . 816) (#("\"" 0 1 (fontified nil)) . 815) (815 . 816) (#(")" 0 1 (fontified nil)) . 816) (816 . 817) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 816) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (#("
" 0 1 (fontified t)) . 817) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (#("(load-theme 'challeng" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 21 (fontified nil)) . 818) (undo-tree-id428 . -21) (undo-tree-id429 . -21) (undo-tree-id430 . -21) (#("er-deep t)" 0 9 (fontified nil) 9 10 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 839) (undo-tree-id431 . -9) (undo-tree-id432 . -9) (undo-tree-id433 . -9) (848 . 849) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 848) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (#("201~" 0 4 (fontified t)) . 849) (undo-tree-id437 . -3) (undo-tree-id438 . -3) (undo-tree-id439 . -3)) (26384 16591 404365 0) 0 nil] [nil nil ((nil rear-nonsticky nil 843 . 844) (nil fontified nil 825 . 844) (825 . 844)) ((#("(catppuccin-reload)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 18 (fontified nil) 18 19 (face (rainbow-delimiters-depth-1-face) fontified nil rear-nonsticky nil)) . 825) (undo-tree-id404 . -18) (undo-tree-id405 . -18) (undo-tree-id406 . -18) (undo-tree-id407 . -18) (nil rear-nonsticky t 843 . 844)) (26384 16589 266061 0) 0 nil])
([nil nil ((828 . 829) (#("0" 0 1 (fontified nil)) . 828) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (827 . 828) (#("0" 0 1 (fontified nil)) . 827) (826 . 827) (#("2" 0 1 (fontified t)) . 826)) nil (26384 16597 680661 0) 0 nil])
nil
nil
([nil nil ((828 . 829) (#("0" 0 1 (fontified nil)) . 828) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (827 . 828) (#("0" 0 1 (fontified nil)) . 827) (826 . 827) (#("2" 0 1 (fontified t)) . 826)) nil (26384 16609 820544 0) 0 nil] [nil nil ((831 . 832) (#("a" 0 1 (fontified nil)) . 831) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (830 . 831) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 830) (829 . 830) (#("~" 0 1 (fontified t)) . 829)) ((829 . 830) (#("~" 0 1 (fontified nil)) . 829) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (830 . 831) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 830) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (831 . 832) (#("A" 0 1 (fontified t)) . 831) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1)) (26384 16596 628930 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -826) (undo-tree-id803 . -1) (#("~" 0 1 (fontified t)) . -827) (undo-tree-id804 . -1) 828 (#("~" 0 1 (fontified t)) . -827) (undo-tree-id805 . -1) 828 (826 . 828) (#("2" 0 1 (fontified t)) . -826) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (#("0" 0 1 (fontified t)) . -827) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (#("0" 0 1 (fontified t)) . -828) (undo-tree-id817 . -1) 829) nil (26384 16609 820541 0) 0 nil])
([nil nil ((834 . 835) (#("-" 0 1 (fontified nil)) . 834) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (833 . 834) (#("d" 0 1 (fontified nil)) . 833) (832 . 833) (#("d" 0 1 (fontified t)) . 832)) ((832 . 833) (#("D" 0 1 (fontified nil)) . 832) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (833 . 834) (#("D" 0 1 (fontified nil)) . 833) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (834 . 835) (#("-" 0 1 (fontified t)) . 834) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1)) (26384 16596 283239 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -915) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (#("0" 0 1 (fontified t)) . -916) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (#("1" 0 1 (fontified t)) . -917) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (#("~" 0 1 (fontified t)) . -918) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) 919) nil (26384 16609 820534 0) 0 nil])
([nil nil ((837 . 838) (#("-" 0 1 (fontified nil)) . 837) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (836 . 837) (#("o" 0 1 (fontified nil)) . 836) (835 . 836) (#("t" 0 1 (fontified t)) . 835)) ((835 . 836) (#("T" 0 1 (fontified nil)) . 835) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (836 . 837) (#("O" 0 1 (fontified nil)) . 836) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (837 . 838) (#("-" 0 1 (fontified t)) . 837) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1)) (26384 16596 283136 0) 0 nil])
([nil nil ((#("I
" 0 2 (fontified t)) . 84) (undo-tree-id0 . -2) (undo-tree-id1 . -1) (t 26384 16609 825629 605000)) nil (26384 16693 183889 0) 0 nil])
nil
([nil nil ((#("(use-package challenger-deep-theme)

" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 37 (fontified t)) . 84) (undo-tree-id0 . -36) (undo-tree-id1 . -36) (undo-tree-id2 . -36) (undo-tree-id3 . -36) (undo-tree-id4 . -36) (undo-tree-id5 . -37) (undo-tree-id6 . -37) (undo-tree-id7 . -37) (undo-tree-id8 . -37) (undo-tree-id9 . -37) (undo-tree-id10 . -37) (undo-tree-id11 . -37) (undo-tree-id12 . -37) (undo-tree-id13 . -37) (undo-tree-id14 . -37) (undo-tree-id15 . -36) (undo-tree-id16 . -36) (undo-tree-id17 . -36) (undo-tree-id18 . -36) (undo-tree-id19 . -36) (undo-tree-id20 . -36) (undo-tree-id21 . -36) (undo-tree-id22 . -36) (undo-tree-id23 . -36) (undo-tree-id24 . -36) (undo-tree-id25 . -36) (undo-tree-id26 . -36) (undo-tree-id27 . -36) (undo-tree-id28 . -36) (undo-tree-id29 . -36) (undo-tree-id30 . -36) (undo-tree-id31 . -36) (undo-tree-id32 . -36) (undo-tree-id33 . -36) (undo-tree-id34 . -36) (undo-tree-id35 . -36) (undo-tree-id36 . -36) (undo-tree-id37 . -36) (undo-tree-id38 . -36) (undo-tree-id39 . -36) (undo-tree-id40 . -36) (undo-tree-id41 . -36) (undo-tree-id42 . -36) (undo-tree-id43 . -36) (undo-tree-id44 . -36) (undo-tree-id45 . -37) (undo-tree-id46 . -36) 120 (t 26384 16693 187325 147000)) nil (26384 16984 109866 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 840 . 841) (nil fontified nil 160 . 841) (160 . 841) (159 . 160) (158 . 159) (t 26384 16984 114509 834000) 137) nil (26384 17003 177718 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -394) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) 396 (393 . 396) (t 26384 17003 181794 909000) 341) nil (26384 17013 872789 0) 0 nil])
([nil nil ((#("(load-theme 'challenger-deep t)
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 32 (fontified t)) . 1529) (undo-tree-id64 . -32) (undo-tree-id65 . -31) (undo-tree-id66 . -32)) nil (26384 17015 903634 0) 0 nil] [nil nil ((#("
(add-to-list 'custom-theme-load-path \"~/.emacs.d/themes\")
(load-theme 'challenger-deep t)
" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 38 (fontified t) 38 57 (face font-lock-string-face fontified t) 57 58 (face (rainbow-delimiters-depth-1-face) fontified t) 58 59 (fontified t) 59 60 (face (rainbow-delimiters-depth-1-face) fontified t) 60 89 (fontified t) 89 90 (face (rainbow-delimiters-depth-1-face) fontified t) 90 91 (fontified t)) . 1470) (undo-tree-id61 . -91) (undo-tree-id62 . -91) (undo-tree-id63 . -90) (t 26384 17005 966995 32000)) ((1470 . 1561) (t 26384 17009 876115 642000)) (26384 17009 871990 0) 0 nil])
([nil nil ((#("
(add-to-list 'custom-theme-load-path \"~/.emacs.d/themes\")
" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 38 (fontified t) 38 57 (face font-lock-string-face fontified t) 57 58 (face (rainbow-delimiters-depth-1-face) fontified t) 58 59 (fontified t)) . 1470) (undo-tree-id67 . -59) (undo-tree-id68 . -59) (undo-tree-id69 . -58) (undo-tree-id70 . -59) (undo-tree-id71 . -59) (undo-tree-id72 . -59) (undo-tree-id73 . -59) (undo-tree-id74 . -59) (undo-tree-id75 . -59) (undo-tree-id76 . -59) (undo-tree-id77 . -59) (undo-tree-id78 . -59) (undo-tree-id79 . -59) (undo-tree-id80 . -59) (undo-tree-id81 . -59) (undo-tree-id82 . -59) (undo-tree-id83 . -59) (undo-tree-id84 . -59) (undo-tree-id85 . -59) (undo-tree-id86 . -59) (undo-tree-id87 . -59) (undo-tree-id88 . -59) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -59) (undo-tree-id120 . -59) (undo-tree-id121 . -59) (undo-tree-id122 . -59) (undo-tree-id123 . -59) (undo-tree-id124 . -59) (undo-tree-id125 . -59) (undo-tree-id126 . -59) (undo-tree-id127 . -59) (undo-tree-id128 . -59) (undo-tree-id129 . -59) (undo-tree-id130 . -59) (undo-tree-id131 . -59) (undo-tree-id132 . -59) (undo-tree-id133 . -59) (undo-tree-id134 . -59) (undo-tree-id135 . -59) (undo-tree-id136 . -59) (undo-tree-id137 . -59) (undo-tree-id138 . -59) 1529 (t 26384 17015 907947 117000)) nil (26384 17022 310784 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 82 . 83) (#("
" 0 1 (fontified nil)) . -141) (82 . 142) 73) nil (26384 17022 310757 0) 0 nil])
([nil nil ((#("  ;; or for treemacs users
  (setq doom-themes-treemacs-theme \"doom-atom\") ; use \"doom-colors\" for less minimal icon theme
  (doom-themes-treemacs-config)
" 0 2 (fontified t) 2 5 (face font-lock-comment-delimiter-face fontified t) 5 27 (face font-lock-comment-face fontified t) 27 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-2-face) fontified t) 30 34 (face font-lock-keyword-face fontified t) 34 62 (fontified t) 62 73 (face font-lock-string-face fontified t) 73 74 (face (rainbow-delimiters-depth-2-face) fontified t) 74 75 (fontified t) 75 77 (face font-lock-comment-delimiter-face fontified t) 77 123 (face font-lock-comment-face fontified t) 123 125 (fontified t) 125 126 (face (rainbow-delimiters-depth-2-face) fontified t) 126 153 (fontified t) 153 154 (face (rainbow-delimiters-depth-2-face) fontified t) 154 155 (fontified t)) . 657) (undo-tree-id143 . -123) (undo-tree-id144 . -123) (undo-tree-id145 . -154) (undo-tree-id146 . -123) 780 (t 26384 17022 317775 971000)) nil (26384 17041 944915 0) 0 nil])
([nil nil ((#("  ;; Enable custom neotree theme (all-the-icons must be installed!)
  (doom-themes-neotree-config)
" 0 2 (fontified t) 2 5 (face font-lock-comment-delimiter-face fontified t) 5 68 (face font-lock-comment-face fontified t) 68 70 (fontified t) 70 71 (face (rainbow-delimiters-depth-2-face) fontified t) 71 97 (fontified t) 97 98 (face (rainbow-delimiters-depth-2-face) fontified t) 98 99 (fontified t)) . 558) (undo-tree-id139 . -68) (undo-tree-id140 . -68) (undo-tree-id141 . -98) (undo-tree-id142 . -68) 626) nil (26384 17292 332674 0) 0 nil])
([nil nil ((#("
  (load-theme 'doom-one t)

" 0 1 (fontified t) 1 3 (fontified t) 3 4 (face (rainbow-delimiters-depth-2-face) fontified t) 4 21 (fontified t) 21 24 (fontified t) 24 26 (fontified t) 26 27 (face (rainbow-delimiters-depth-2-face) fontified t) 27 28 (fontified t) 28 29 (fontified t)) . 453) (undo-tree-id75 . -28) (undo-tree-id76 . -20) (undo-tree-id77 . -28) (undo-tree-id78 . -21) (undo-tree-id79 . -21) (undo-tree-id80 . -28) (undo-tree-id81 . -28) (undo-tree-id82 . -28) (undo-tree-id83 . -28) (undo-tree-id84 . -28) (undo-tree-id85 . -28) (undo-tree-id86 . -28) (undo-tree-id87 . -28) (undo-tree-id88 . -28) (undo-tree-id89 . -28) (undo-tree-id90 . -28) (undo-tree-id91 . -28) (undo-tree-id92 . -28) (undo-tree-id93 . -28) (undo-tree-id94 . -28) (undo-tree-id95 . -28) (undo-tree-id96 . -28) (undo-tree-id97 . -28) (undo-tree-id98 . -20) (undo-tree-id99 . -20) (undo-tree-id100 . -20) (undo-tree-id101 . -20) (undo-tree-id102 . -20) (undo-tree-id103 . -20) (undo-tree-id104 . -20) (undo-tree-id105 . -20) (undo-tree-id106 . -20) (undo-tree-id107 . -20) (undo-tree-id108 . -20) (undo-tree-id109 . -20) (undo-tree-id110 . -20) (undo-tree-id111 . -20) (undo-tree-id112 . -20) (undo-tree-id113 . -20) (undo-tree-id114 . -20) (undo-tree-id115 . -20) (undo-tree-id116 . -20) (undo-tree-id117 . -20) (undo-tree-id118 . -20) (undo-tree-id119 . -20) (undo-tree-id120 . -20) (undo-tree-id121 . -20) (undo-tree-id122 . -20) (undo-tree-id123 . -20) (undo-tree-id124 . -20) (undo-tree-id125 . -20) (undo-tree-id126 . -20) (undo-tree-id127 . -20) (undo-tree-id128 . -20) (undo-tree-id129 . -20) (undo-tree-id130 . -20) (undo-tree-id131 . -20) (undo-tree-id132 . -20) (undo-tree-id133 . -20) (undo-tree-id134 . -20) (undo-tree-id135 . -20) (undo-tree-id136 . -20) (undo-tree-id137 . -20) (undo-tree-id138 . -1) (undo-tree-id139 . -20) (undo-tree-id140 . -20) (undo-tree-id141 . -20) (undo-tree-id142 . -20) (undo-tree-id143 . -20) (undo-tree-id144 . -20) (undo-tree-id145 . -20) (undo-tree-id146 . -20) (undo-tree-id147 . -20) (undo-tree-id148 . -20) (undo-tree-id149 . -20) (undo-tree-id150 . -20) (undo-tree-id151 . -28) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -28) (undo-tree-id168 . -28) (undo-tree-id169 . -28) (undo-tree-id170 . -28) (undo-tree-id171 . -28) (undo-tree-id172 . -28) (undo-tree-id173 . -28) (undo-tree-id174 . -28) (undo-tree-id175 . -28) (undo-tree-id176 . -28) (undo-tree-id177 . -28) (undo-tree-id178 . -28) (undo-tree-id179 . -28) (undo-tree-id180 . -28) (undo-tree-id181 . -21) (undo-tree-id182 . -28) (undo-tree-id183 . -28) (undo-tree-id184 . -28) (undo-tree-id185 . -28) (undo-tree-id186 . -29) 481 (t 26384 17041 950365 47000)) nil (26384 17300 634814 0) 0 nil] [nil nil ((#("  (load-theme 'doom-one t)
" 0 2 (fontified t) 2 3 (face (rainbow-delimiters-depth-2-face) fontified t) 3 20 (fontified t) 20 23 (fontified t) 23 25 (fontified t) 25 26 (face (rainbow-delimiters-depth-2-face) fontified t) 26 27 (fontified t)) . 454) (undo-tree-id5 . -26) (undo-tree-id6 . -19) (undo-tree-id7 . -20) (undo-tree-id8 . -20) (undo-tree-id9 . -20) (undo-tree-id10 . -27) (undo-tree-id11 . -27) (undo-tree-id12 . -27) (undo-tree-id13 . -27) (undo-tree-id14 . -27) (undo-tree-id15 . -27) (undo-tree-id16 . -27) (undo-tree-id17 . -27) (undo-tree-id18 . -27) (undo-tree-id19 . -27) (undo-tree-id20 . -27) (undo-tree-id21 . -27) (undo-tree-id22 . -27) (undo-tree-id23 . -27) (undo-tree-id24 . -27) (undo-tree-id25 . -27) (undo-tree-id26 . -27) (undo-tree-id27 . -27) (undo-tree-id28 . -19) (undo-tree-id29 . -19) (undo-tree-id30 . -19) (undo-tree-id31 . -19) (undo-tree-id32 . -19) (undo-tree-id33 . -19) (undo-tree-id34 . -19) (undo-tree-id35 . -19) (undo-tree-id36 . -19) (undo-tree-id37 . -19) (undo-tree-id38 . -19) (undo-tree-id39 . -19) (undo-tree-id40 . -19) (undo-tree-id41 . -19) (undo-tree-id42 . -19) (undo-tree-id43 . -19) (undo-tree-id44 . -19) (undo-tree-id45 . -19) (undo-tree-id46 . -19) (undo-tree-id47 . -19) (undo-tree-id48 . -19) (undo-tree-id49 . -19) (undo-tree-id50 . -19) (undo-tree-id51 . -19) (undo-tree-id52 . -19) (undo-tree-id53 . -19) (undo-tree-id54 . -19) (undo-tree-id55 . -19) (undo-tree-id56 . -19) (undo-tree-id57 . -19) (undo-tree-id58 . -19) (undo-tree-id59 . -19) (undo-tree-id60 . -19) (undo-tree-id61 . -19) (undo-tree-id62 . -19) (undo-tree-id63 . -19) (undo-tree-id64 . -19) (undo-tree-id65 . -19) (undo-tree-id66 . -19) (undo-tree-id67 . -20) (undo-tree-id68 . -19) (undo-tree-id69 . -19) (undo-tree-id70 . -19) (undo-tree-id71 . -27) 473 (t 26384 17041 950365 47000)) ((454 . 481)) (26384 17292 331782 0) 0 nil] [nil nil ((#("one" 0 3 (fontified t)) . 474) (undo-tree-id0 . -2) (t 26384 17041 950365 47000)) ((474 . 477)) (26384 17278 73553 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1246 . 1247) (#("
" 0 1 (fontified nil)) . -1275) (1246 . 1276)) nil (26384 17300 634782 0) 0 nil])
nil
([nil nil ((477 . 477) (477 . 478) (474 . 477)) ((#("ato" 0 3 (fontified nil)) . 474) (undo-tree-id1 . -3) (undo-tree-id2 . -3) (undo-tree-id3 . -3) (undo-tree-id4 . -3) (#("m" 0 1 (fontified t)) . 477)) (26384 17278 73493 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -1248)) nil (26384 17300 634782 0) 0 nil])
nil
([nil current ((1269 . 1271) (1264 . 1269) (1261 . 1261) (1261 . 1264) (#("doom-one" 0 5 (fontified t) 5 8 (fontified t)) . 1261) (undo-tree-id72 . -7) (undo-tree-id73 . -8) (undo-tree-id74 . -8)) nil (26384 17300 634780 0) 0 nil])
nil
