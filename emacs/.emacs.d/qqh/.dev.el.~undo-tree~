(undo-tree-save-format-version . 1)
"b5f9cb96018a7e3ace88c9bf698abd641a2a2419"
[nil nil nil nil (26383 65352 858316 0) 0 nil]
([nil nil ((6187 . 6187) (6187 . 6191) (6185 . 6185) (6185 . 6187) (#("r" 0 1 (fontified t)) . -6185) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 6186 (6185 . 6185) (6185 . 6186) (6182 . 6182) (6182 . 6185) (t 26383 65065 706835 154000)) nil (26383 65352 858314 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 6864) (undo-tree-id10 . -1) (t 26383 65352 860957 783000)) nil (26383 65366 163313 0) 0 nil])
([nil nil ((5844 . 5846) (t 26383 65366 166597 714000)) nil (26383 65380 314295 0) 0 nil])
([nil nil ((6443 . 6454) (6438 . 6438) (6438 . 6443) (6433 . 6433) (6433 . 6438) (#("s" 0 1 (fontified t)) . -6433) (undo-tree-id41 . -1) (#("e" 0 1 (fontified t)) . -6434) (undo-tree-id42 . -1) 6435 (6433 . 6435) (6432 . 6434) (6429 . 6432) (t 26383 65380 317902 176000) 6390) nil (26384 380 570456 0) 0 nil])
([nil nil ((6443 . 6444) (#(")" 0 1 (face font-lock-function-name-face fontified nil)) . -6443) (6443 . 6444) (#("modules-dir)" 0 11 (face font-lock-function-name-face fontified t) 11 12 (face (rainbow-delimiters-depth-2-face) fontified t)) . 6443) (undo-tree-id38 . -11) (undo-tree-id39 . 1) (undo-tree-id40 . -11)) nil (26384 380 570455 0) 0 nil])
([nil nil ((6471 . 6477) (6466 . 6466) (6466 . 6471) (6465 . 6467) (6458 . 6465) (#(" " 0 1 (fontified t)) . -6458) (undo-tree-id29 . -1) 6459 (6458 . 6459) (6453 . 6453) (6453 . 6458) (6450 . 6450) (6450 . 6453) (6443 . 6443) (6443 . 6450) (#("l" 0 1 (face font-lock-function-name-face fontified t)) . -6443) (undo-tree-id30 . -1) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . -6444) (undo-tree-id31 . -1) (#("p" 0 1 (face font-lock-function-name-face fontified t)) . -6445) (undo-tree-id32 . -1) (#("-" 0 1 (face font-lock-function-name-face fontified t)) . -6446) (undo-tree-id33 . -1) (#("m" 0 1 (face font-lock-function-name-face fontified t)) . -6447) (undo-tree-id34 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -6448) (undo-tree-id35 . -1) (#("d" 0 1 (face font-lock-function-name-face fontified t)) . -6449) (undo-tree-id36 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -6450) (undo-tree-id37 . -1) 6451 (6446 . 6446) (6446 . 6451) (6443 . 6443) (6443 . 6446)) nil (26384 380 570453 0) 0 nil])
([nil nil ((#("      " 0 6 (fontified nil)) . -6463) (6459 . 6463) 6476) nil (26384 380 570449 0) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil)) . -6464) (6464 . 6465) (#("\"" 0 1 (face font-lock-string-face fontified nil)) . -6464) (6464 . 6465) (6463 . 6465) (#("\"" 0 1 (fontified nil)) . -6463) (6463 . 6464) (#(" " 0 1 (fontified t)) . -6463) (undo-tree-id26 . -1) (#(" " 0 1 (fontified t)) . -6464) (undo-tree-id27 . -1) 6465 (#("\"" 0 1 (face font-lock-string-face fontified nil)) . -6465) (undo-tree-id28 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 6466) (6465 . 6467) (#("\"" 0 1 (fontified nil)) . -6465) (6465 . 6466) (6458 . 6465) 6447) nil (26384 380 570448 0) 0 nil])
([nil nil ((6452 . 6452) (6452 . 6458) (6443 . 6443) (6443 . 6452) (#("python-lsp-mode" 0 15 (face font-lock-function-name-face fontified t)) . 6443) (undo-tree-id24 . -14) (undo-tree-id25 . -4)) nil (26384 380 570446 0) 0 nil])
([nil nil ((6485 . 6487) (6464 . 6485)) nil (26384 380 570445 0) 0 nil])
([nil nil ((6468 . 6485) (6464 . 6468) (#("Allows the user to choo" 0 23 (face font-lock-string-face fontified t)) . 6464) (undo-tree-id22 . -22) (undo-tree-id23 . -22) 6486) nil (26384 380 570444 0) 0 nil])
([nil nil ((6512 . 6515) (6492 . 6512) (6471 . 6492) (#("an environment" 0 14 (face font-lock-string-face fontified t)) . 6471) (undo-tree-id21 . -13)) nil (26384 380 570443 0) 0 nil])
([nil nil ((6499 . 6504) (#("activate" 0 8 (face font-lock-string-face fontified t)) . 6499) (undo-tree-id20 . -7)) nil (26384 380 570443 0) 0 nil])
([nil nil ((6529 . 6546) (6520 . 6529) (#("i" 0 1 (face font-lock-string-face fontified t)) . -6520) (undo-tree-id18 . -1) 6521 (6505 . 6521) (#("the lsp" 0 7 (face font-lock-string-face fontified t)) . 6505) (undo-tree-id19 . -6)) nil (26384 380 570442 0) 0 nil])
([nil nil ((6570 . 6572) (6565 . 6570)) nil (26384 380 570441 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -6571) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#("y" 0 1 (fontified t)) . -6572) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("v" 0 1 (fontified t)) . -6573) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("e" 0 1 (fontified t)) . -6574) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("n" 0 1 (fontified t)) . -6575) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("v" 0 1 (fontified t)) . -6576) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 6577 (6571 . 6571) (6571 . 6577) (6570 . 6572) (6565 . 6570) 6552) nil (26384 380 570440 0) 0 nil])
([nil nil ((6577 . 6584) (6571 . 6571) (6571 . 6577)) nil (26384 380 570416 0) 0 nil])
([nil nil ((6594 . 6594) (6594 . 6599) (6591 . 6591) (6591 . 6594)) nil (26384 380 570413 0) 0 nil])
([nil nil ((#("    \"Choose a virtual environment, then start a language server using that environment.\"
" 0 4 (fontified t) 4 87 (face font-lock-string-face fontified t) 87 88 (face font-lock-string-face fontified t) 88 89 (fontified t)) . 6459) (undo-tree-id43 . -88) (undo-tree-id44 . -4) (undo-tree-id45 . -4) (undo-tree-id46 . -4) (undo-tree-id47 . -4) (undo-tree-id48 . -4) (undo-tree-id49 . -4) (undo-tree-id50 . -14) (undo-tree-id51 . -14) (undo-tree-id52 . -14) (undo-tree-id53 . -14) (undo-tree-id54 . -14) (undo-tree-id55 . -14) (undo-tree-id56 . -89) 6473 (t 26384 380 574640 688000)) nil (26384 386 901848 0) 0 nil])
([nil nil ((#("  (defun qqh/lsp-mode-python
    (interactive)
    (pyvenv-workon)
    (lsp-mode))
" 0 2 (fontified t) 2 3 (face (rainbow-delimiters-depth-2-face) fontified t) 3 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 28 (face font-lock-function-name-face fontified t) 28 29 (fontified t) 29 33 (fontified t) 33 34 (face (rainbow-delimiters-depth-3-face) fontified t) 34 45 (face font-lock-keyword-face fontified t) 45 46 (face (rainbow-delimiters-depth-3-face) fontified t) 46 47 (fontified t) 47 51 (fontified t) 51 52 (face (rainbow-delimiters-depth-3-face) fontified t) 52 65 (fontified t) 65 66 (face (rainbow-delimiters-depth-3-face) fontified t) 66 67 (fontified t) 67 71 (fontified t) 71 72 (face (rainbow-delimiters-depth-3-face) fontified t) 72 80 (fontified t) 80 81 (face (rainbow-delimiters-depth-3-face) fontified t) 81 82 (face (rainbow-delimiters-depth-2-face) fontified t) 82 83 (fontified t)) . 6430) (undo-tree-id66 . -81) (undo-tree-id67 . -8) (undo-tree-id68 . -65) (undo-tree-id69 . -8) (undo-tree-id70 . 3) (undo-tree-id71 . -82) (undo-tree-id72 . -14) (undo-tree-id73 . -81) (undo-tree-id74 . -44) (undo-tree-id75 . -29) (undo-tree-id76 . -29) (undo-tree-id77 . -29) (undo-tree-id78 . -81) (undo-tree-id79 . -81) (undo-tree-id80 . -81) (undo-tree-id81 . -81) 6511 (t 26384 386 905570 87000)) nil (26384 432 252984 0) 0 nil])
([nil nil ((6637 . 6638) (6636 . 6637) 6608) nil (26384 432 252979 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 6640 . 6641) (#("
" 0 1 (fontified nil)) . -6721) (6638 . 6722)) nil (26384 432 252979 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -6702) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (6700 . 6702) (#("    " 0 4 (fontified nil)) . -6684) (6682 . 6684) (#("    " 0 4 (fontified nil)) . -6668) (6666 . 6668) (#("  " 0 1 (fontified t) 1 2 (rear-nonsticky t fontified t)) . -6639) (undo-tree-id65 . -2) 6708) nil (26384 432 252978 0) 0 nil])
([nil nil ((6665 . 6668) (#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -6665) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 6666) (6665 . 6667)) nil (26384 432 252974 0) 0 nil])
([nil nil ((6838 . 6840) (#("  " 0 2 (fontified nil)) . 6837) (undo-tree-id95 . -2) (6836 . 6840) (t 26384 432 257294 52000)) nil (26384 532 380134 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 7362 . 7363) (nil fontified nil 6837 . 7363) (6837 . 7363)) nil (26384 532 380133 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -6837) (undo-tree-id91 . -2) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -2) 6839 (6836 . 6839) 6819) nil (26384 532 380132 0) 0 nil])
([nil nil ((#("                             " 0 29 (fontified nil)) . -7319) (7310 . 7319) (#("                             " 0 29 (fontified nil)) . -7289) (7280 . 7289) (#("    " 0 4 (fontified nil)) . -7247) (7241 . 7247) (#("  " 0 2 (fontified nil)) . -7181) (7177 . 7181) (#("                     " 0 21 (fontified nil)) . -7133) (7125 . 7133) (#("    " 0 4 (fontified nil)) . -7071) (7065 . 7071) (#("   " 0 3 (fontified nil)) . -7059) (7055 . 7059) (#("  " 0 2 (fontified nil)) . -7042) (7038 . 7042) (6991 . 6993) (6924 . 6926) (#("  " 0 2 (fontified nil)) . -6872) (6868 . 6872) (6838 . 6840) 7326) nil (26384 532 380131 0) 0 nil])
([nil nil ((6842 . 6863) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -6842) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -6843) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) 6844 (6840 . 6844) (6837 . 6840) 6837) nil (26384 532 380129 0) 0 nil])
([nil nil ((6889 . 6908) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -6889) (undo-tree-id82 . -1) 6890 (6871 . 6890) (6863 . 6871)) nil (26384 532 380125 0) 0 nil])
([nil nil ((7403 . 7403) (7403 . 7411) (7402 . 7404) (7397 . 7402) (t 26384 532 384017 398000)) nil (26384 550 396813 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7414) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1)) nil (26384 550 396810 0) 0 nil])
([nil nil ((6919 . 6919) (6919 . 6922) (#("h" 0 1 (face font-lock-function-name-face fontified t)) . -6919) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) 6920 (6918 . 6920) (#("w" 0 1 (face font-lock-function-name-face fontified t)) . -6918) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) 6919 (6918 . 6919) (t 26384 550 401381 787000)) nil (26384 606 361571 0) 0 nil])
([nil nil ((6932 . 6932) (6932 . 6937) (6922 . 6922) (6922 . 6932) (#("pyvenv-workon" 0 13 (face font-lock-function-name-face fontified t)) . 6922) (undo-tree-id103 . 13) (undo-tree-id104 . -12) (undo-tree-id105 . -13) (undo-tree-id106 . -13)) nil (26384 606 361565 0) 0 nil])
([nil nil ((#("		      " 0 8 (fontified nil)) . -7202) (7199 . 7202) (#("      " 0 6 (fontified nil)) . -7145) (7144 . 7145) (#("    " 0 4 (fontified nil)) . -7138) (7132 . 7138) 7141 (t 26384 606 366469 701000)) nil (26384 633 751409 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil)) . 7411) (undo-tree-id115 . -2) (#("
" 0 1 (fontified t rear-nonsticky t)) . -7411) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) 7410) nil (26384 633 751407 0) 0 nil])
([nil nil ((#("(defun qqh/lsp-mode-python ()
  (interactive)
  (pyvenv-workon)
  (lsp-mode))

" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 26 (face font-lock-function-name-face fontified t) 26 27 (fontified t) 27 28 (face (rainbow-delimiters-depth-2-face) fontified t) 28 29 (face (rainbow-delimiters-depth-2-face) fontified t) 29 32 (fontified t) 32 33 (face (rainbow-delimiters-depth-2-face) fontified t) 33 44 (face font-lock-keyword-face fontified t) 44 45 (face (rainbow-delimiters-depth-2-face) fontified t) 45 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-2-face) fontified t) 49 62 (fontified t) 62 63 (face (rainbow-delimiters-depth-2-face) fontified t) 63 66 (fontified t) 66 67 (face (rainbow-delimiters-depth-2-face) fontified t) 67 75 (fontified t) 75 76 (face (rainbow-delimiters-depth-2-face) fontified t) 76 77 (face (rainbow-delimiters-depth-1-face) fontified t) 77 79 (fontified t)) . 6639) (undo-tree-id0 . -78) (undo-tree-id1 . -78) (undo-tree-id2 . -78) (undo-tree-id3 . -78) (undo-tree-id4 . -78) (undo-tree-id5 . -79) (undo-tree-id6 . -78) 6717 (t 26384 633 755590 228000)) nil (26384 709 979650 0) 0 nil])
([nil nil ((7332 . 7335)) nil (26384 724 531949 0) 0 nil] [nil nil ((7332 . 7335)) ((#("
  " 0 3 (fontified t)) . 7332) (undo-tree-id7 . 2)) (26384 709 979598 0) 0 nil])
([nil nil ((#("
  ;; Taken from pyvenv.el - work on the environment, then start an lsp
  (defun qqh/python-lsp-mode (name)
    \"Activate a virtual environment from $WORKON_HOME.

  If the virtual environment NAME is already active, this function
  does not try to reactivate the environment.\"
    (interactive
      (list
	(completing-read \"Work on: \" (pyvenv-virtualenv-list)
			nil t nil 'pyvenv-workon-history nil nil)))
    (unless (member name (list \"\" nil pyvenv-virtual-env-name))
      (pyvenv-activate (format \"%s/%s\"
			      (pyvenv-workon-home)
			      name)))
    (lsp-mode))
" 0 3 (fontified t) 3 6 (face font-lock-comment-delimiter-face fontified t) 6 72 (face font-lock-comment-face fontified t) 72 74 (fontified t) 74 75 (face (rainbow-delimiters-depth-2-face) fontified t) 75 80 (face font-lock-keyword-face fontified t) 80 81 (fontified t) 81 100 (face font-lock-function-name-face fontified t) 100 101 (fontified t) 101 102 (face (rainbow-delimiters-depth-3-face) fontified t) 102 106 (fontified t) 106 107 (face (rainbow-delimiters-depth-3-face) fontified t) 107 112 (fontified t) 112 277 (face font-lock-doc-face fontified t) 277 282 (fontified t) 282 283 (face (rainbow-delimiters-depth-3-face) fontified t) 283 294 (face font-lock-keyword-face fontified t) 294 301 (fontified t) 301 302 (face (rainbow-delimiters-depth-4-face) fontified t) 302 308 (fontified t) 308 309 (face (rainbow-delimiters-depth-5-face) fontified t) 309 325 (fontified t) 325 336 (face font-lock-string-face fontified t) 336 337 (fontified t) 337 338 (face (rainbow-delimiters-depth-6-face) fontified t) 338 360 (fontified t) 360 361 (face (rainbow-delimiters-depth-6-face) fontified t) 361 405 (fontified t) 405 406 (face (rainbow-delimiters-depth-5-face) fontified t) 406 407 (face (rainbow-delimiters-depth-4-face) fontified t) 407 408 (face (rainbow-delimiters-depth-3-face) fontified t) 408 413 (fontified t) 413 414 (face (rainbow-delimiters-depth-3-face) fontified t) 414 420 (face font-lock-keyword-face fontified t) 420 421 (fontified t) 421 422 (face (rainbow-delimiters-depth-4-face) fontified t) 422 434 (fontified t) 434 435 (face (rainbow-delimiters-depth-5-face) fontified t) 435 440 (fontified t) 440 442 (face font-lock-string-face fontified t) 442 470 (fontified t) 470 471 (face (rainbow-delimiters-depth-5-face) fontified t) 471 472 (face (rainbow-delimiters-depth-4-face) fontified t) 472 479 (fontified t) 479 480 (face (rainbow-delimiters-depth-4-face) fontified t) 480 496 (fontified t) 496 497 (face (rainbow-delimiters-depth-5-face) fontified t) 497 504 (fontified t) 504 511 (face font-lock-string-face fontified t) 511 521 (fontified t) 521 522 (face (rainbow-delimiters-depth-6-face) fontified t) 522 540 (fontified t) 540 541 (face (rainbow-delimiters-depth-6-face) fontified t) 541 555 (fontified t) 555 556 (face (rainbow-delimiters-depth-5-face) fontified t) 556 557 (face (rainbow-delimiters-depth-4-face) fontified t) 557 558 (face (rainbow-delimiters-depth-3-face) fontified t) 558 559 (fontified t) 559 563 (fontified t) 563 564 (face (rainbow-delimiters-depth-3-face) fontified t) 564 572 (fontified t) 572 573 (face (rainbow-delimiters-depth-3-face) fontified t) 573 574 (face (rainbow-delimiters-depth-2-face) fontified t) 574 575 (fontified t)) . 6758) (undo-tree-id205 . -559) (undo-tree-id206 . -559) (undo-tree-id207 . -559) (undo-tree-id208 . -574) (undo-tree-id209 . -560) (undo-tree-id210 . -543) (undo-tree-id211 . -560) (undo-tree-id212 . -543) (undo-tree-id213 . -574) (undo-tree-id214 . -574) (undo-tree-id215 . -574) (undo-tree-id216 . -574) (undo-tree-id217 . -574) (undo-tree-id218 . -574) (undo-tree-id219 . -574) (undo-tree-id220 . -574) (undo-tree-id221 . -574) (undo-tree-id222 . 1) (undo-tree-id223 . -560) (undo-tree-id224 . -560) (undo-tree-id225 . -543) (undo-tree-id226 . -474) (undo-tree-id227 . -363) (undo-tree-id228 . -296) (undo-tree-id229 . -163) (undo-tree-id230 . -109) (undo-tree-id231 . -559) (undo-tree-id232 . -559) (undo-tree-id233 . -575) 7317) nil (26384 729 522642 0) 0 nil] [nil nil ((#("
  ;; Taken from pyvenv.el - work on the environment, then start an lsp
  (defun qqh/python-lsp-mode (name)
    \"Activate a virtual environment from $WORKON_HOME.

  If the virtual environment NAME is already active, this function
  does not try to reactivate the environment.\"
    (interactive
      (list
	(completing-read \"Work on: \" (pyvenv-virtualenv-list)
			nil t nil 'pyvenv-workon-history nil nil)))
    (unless (member name (list \"\" nil pyvenv-virtual-env-name))
      (pyvenv-activate (format \"%s/%s\"
			      (pyvenv-workon-home)
			      name)))
    (lsp-mode))
" 0 3 (fontified t) 3 6 (face font-lock-comment-delimiter-face fontified t) 6 72 (face font-lock-comment-face fontified t) 72 74 (fontified t) 74 75 (face (rainbow-delimiters-depth-2-face) fontified t) 75 80 (face font-lock-keyword-face fontified t) 80 81 (fontified t) 81 100 (face font-lock-function-name-face fontified t) 100 101 (fontified t) 101 102 (face (rainbow-delimiters-depth-3-face) fontified t) 102 106 (fontified t) 106 107 (face (rainbow-delimiters-depth-3-face) fontified t) 107 112 (fontified t) 112 277 (face font-lock-doc-face fontified t) 277 282 (fontified t) 282 283 (face (rainbow-delimiters-depth-3-face) fontified t) 283 294 (face font-lock-keyword-face fontified t) 294 301 (fontified t) 301 302 (face (rainbow-delimiters-depth-4-face) fontified t) 302 308 (fontified t) 308 309 (face (rainbow-delimiters-depth-5-face) fontified t) 309 325 (fontified t) 325 336 (face font-lock-string-face fontified t) 336 337 (fontified t) 337 338 (face (rainbow-delimiters-depth-6-face) fontified t) 338 360 (fontified t) 360 361 (face (rainbow-delimiters-depth-6-face) fontified t) 361 405 (fontified t) 405 406 (face (rainbow-delimiters-depth-5-face) fontified t) 406 407 (face (rainbow-delimiters-depth-4-face) fontified t) 407 408 (face (rainbow-delimiters-depth-3-face) fontified t) 408 413 (fontified t) 413 414 (face (rainbow-delimiters-depth-3-face) fontified t) 414 420 (face font-lock-keyword-face fontified t) 420 421 (fontified t) 421 422 (face (rainbow-delimiters-depth-4-face) fontified t) 422 434 (fontified t) 434 435 (face (rainbow-delimiters-depth-5-face) fontified t) 435 440 (fontified t) 440 442 (face font-lock-string-face fontified t) 442 470 (fontified t) 470 471 (face (rainbow-delimiters-depth-5-face) fontified t) 471 472 (face (rainbow-delimiters-depth-4-face) fontified t) 472 479 (fontified t) 479 480 (face (rainbow-delimiters-depth-4-face) fontified t) 480 496 (fontified t) 496 497 (face (rainbow-delimiters-depth-5-face) fontified t) 497 504 (fontified t) 504 511 (face font-lock-string-face fontified t) 511 521 (fontified t) 521 522 (face (rainbow-delimiters-depth-6-face) fontified t) 522 540 (fontified t) 540 541 (face (rainbow-delimiters-depth-6-face) fontified t) 541 555 (fontified t) 555 556 (face (rainbow-delimiters-depth-5-face) fontified t) 556 557 (face (rainbow-delimiters-depth-4-face) fontified t) 557 558 (face (rainbow-delimiters-depth-3-face) fontified t) 558 559 (fontified t) 559 563 (fontified t) 563 564 (face (rainbow-delimiters-depth-3-face) fontified t) 564 572 (fontified t) 572 573 (face (rainbow-delimiters-depth-3-face) fontified t) 573 574 (face (rainbow-delimiters-depth-2-face) fontified t) 574 575 (fontified t)) . 6758) (undo-tree-id32 . -560) (undo-tree-id33 . -560) (undo-tree-id34 . -574) (undo-tree-id35 . -560) (undo-tree-id36 . -543) (undo-tree-id37 . -560) (undo-tree-id38 . -543) (undo-tree-id39 . -574) (undo-tree-id40 . -574) (undo-tree-id41 . -574) (undo-tree-id42 . -574) (undo-tree-id43 . -574) (undo-tree-id44 . -574) (undo-tree-id45 . -574) (undo-tree-id46 . -574) (undo-tree-id47 . -574) (undo-tree-id48 . 1) (undo-tree-id49 . -560) (undo-tree-id50 . -560) (undo-tree-id51 . -543) (undo-tree-id52 . -474) (undo-tree-id53 . -363) (undo-tree-id54 . -296) (undo-tree-id55 . -163) (undo-tree-id56 . -109) (undo-tree-id57 . -575)) ((6758 . 7333)) (26384 724 186716 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 6761 . 6762) (#("
" 0 1 (fontified nil)) . -7336) (6761 . 7337) 6758) nil (26384 729 522635 0) 0 nil])
([nil nil ((#("y" 0 1 (face font-lock-constant-face fontified t)) . -6774) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 6775 (6764 . 6775) (6763 . 6765) (6762 . 6763) (6761 . 6762) 6758) ((#("
" 0 1 (fontified t)) . 6761) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("
" 0 1 (fontified t)) . 6762) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (#("()" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 6763) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . 1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (#("require 'py" 0 7 (face font-lock-keyword-face fontified nil) 7 9 (fontified nil) 9 10 (face font-lock-constant-face fontified nil) 10 11 (face font-lock-constant-face fontified nil)) . 6764) (undo-tree-id139 . -9) (undo-tree-id140 . -9) (undo-tree-id141 . -3) (undo-tree-id142 . -4) (undo-tree-id143 . -5) (undo-tree-id144 . -6) (undo-tree-id145 . -7) (undo-tree-id146 . -8) (undo-tree-id147 . -8) (undo-tree-id148 . -8) (undo-tree-id149 . -9) (undo-tree-id150 . -10) (undo-tree-id151 . -11) (undo-tree-id152 . -10) (undo-tree-id153 . -9) (undo-tree-id154 . -9) (undo-tree-id155 . -9) (undo-tree-id156 . -9) (undo-tree-id157 . -9) (undo-tree-id158 . -9) (undo-tree-id159 . -9) (undo-tree-id160 . -9) (6774 . 6775)) (26384 723 408644 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil)) . 6757) (undo-tree-id161 . 2) (undo-tree-id162 . 2) (#("
" 0 1 (fontified t)) . -6757) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) 6740) nil (26384 729 522632 0) 0 nil])
([nil nil ((#("(require 'p)
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 8 (face font-lock-keyword-face fontified t) 8 10 (fontified t) 10 11 (face font-lock-constant-face fontified t) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t) 12 13 (fontified t)) . 6763) (undo-tree-id8 . -10) (undo-tree-id9 . -12) (undo-tree-id10 . 2) (undo-tree-id11 . -4) (undo-tree-id12 . -5) (undo-tree-id13 . -6) (undo-tree-id14 . -7) (undo-tree-id15 . -8) (undo-tree-id16 . -9) (undo-tree-id17 . -9) (undo-tree-id18 . -9) (undo-tree-id19 . -10) (undo-tree-id20 . -11) (undo-tree-id21 . -11) (undo-tree-id22 . -11) (undo-tree-id23 . -10) (undo-tree-id24 . -10) (undo-tree-id25 . -10) (undo-tree-id26 . -10) (undo-tree-id27 . -10) (undo-tree-id28 . -13) 6773) ((6763 . 6776)) (26384 723 360736 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -7310) (#(" " 0 1 (fontified t)) . -7300) (#(" " 0 1 (fontified t)) . -7271) (#("  " 0 2 (fontified t)) . -7230) (#("  " 0 2 (fontified t)) . -7166) (#("	" 0 1 (fontified nil)) . -7120) (7120 . 7121) (#("	" 0 1 (fontified nil)) . 7120) (7115 . 7120) (#("	" 0 1 (fontified nil)) . -7059) (7059 . 7060) (#("	" 0 1 (fontified nil)) . 7059) (7055 . 7059) (#("   " 0 3 (fontified t)) . -7049) (#("  " 0 2 (fontified t)) . -7033) (#("  " 0 2 (fontified t)) . -6865) (#("  " 0 2 (fontified t)) . -6829) (#("  " 0 2 (fontified t)) . -6760) 7333 (t 26384 729 526007 431000)) nil (26384 732 716696 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 6762 . 6763) (#("
" 0 1 (fontified nil)) . -6775) (6762 . 6776)) ((#("
(require 'p)
" 0 1 (rear-nonsticky nil fontified nil) 1 2 (face (rainbow-delimiters-depth-1-face) fontified nil) 2 9 (face font-lock-keyword-face fontified nil) 9 11 (fontified nil) 11 12 (face font-lock-constant-face fontified nil) 12 13 (face (rainbow-delimiters-depth-1-face) fontified nil) 13 14 (fontified nil)) . 6762) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -13) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (6775 . 6776) (nil rear-nonsticky t 6762 . 6763)) (26384 723 360653 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -7164) (undo-tree-id234 . -2) (undo-tree-id235 . -2) (undo-tree-id236 . -2) (undo-tree-id237 . -2) 7166 (7163 . 7166) (t 26384 732 720845 961000) 7116) nil (26384 739 753733 0) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 6281) (undo-tree-id0 . -1) (t 26384 739 757652 913000)) nil (26384 11182 317434 0) 0 nil])
([nil current ((#("
(use-package lsp-pyright
  :hook (python-mode . (lambda ()
                         (require 'lsp-pyright)
                         (lsp-deferred))))

" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 25 (face font-lock-constant-face fontified t) 25 28 (fontified t) 28 33 (face font-lock-builtin-face fontified t) 33 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-2-face) fontified t) 35 49 (fontified t) 49 50 (face (rainbow-delimiters-depth-3-face) fontified t) 50 56 (face font-lock-keyword-face fontified t) 56 57 (fontified t) 57 58 (face (rainbow-delimiters-depth-4-face) fontified t) 58 59 (face (rainbow-delimiters-depth-4-face) fontified t) 59 85 (fontified t) 85 86 (face (rainbow-delimiters-depth-4-face) fontified t) 86 93 (face font-lock-keyword-face fontified t) 93 95 (fontified t) 95 106 (face font-lock-constant-face fontified t) 106 107 (face (rainbow-delimiters-depth-4-face) fontified t) 107 133 (fontified t) 133 134 (face (rainbow-delimiters-depth-4-face) fontified t) 134 146 (fontified t) 146 147 (face (rainbow-delimiters-depth-4-face) fontified t) 147 148 (face (rainbow-delimiters-depth-3-face) fontified t) 148 149 (face (rainbow-delimiters-depth-2-face) fontified t) 149 150 (face (rainbow-delimiters-depth-1-face) fontified t) 150 152 (fontified t)) . 6485) (undo-tree-id1 . -151) (undo-tree-id2 . -151) (undo-tree-id3 . -151) (undo-tree-id4 . -151) (undo-tree-id5 . -151) (undo-tree-id6 . -151) (undo-tree-id7 . -152) 6636 (t 26384 11182 322461 466000)) nil (26384 11197 565755 0) 0 nil])
nil
